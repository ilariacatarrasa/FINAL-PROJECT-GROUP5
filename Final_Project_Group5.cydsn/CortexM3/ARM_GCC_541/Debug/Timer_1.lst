ARM GAS  C:\Users\User\AppData\Local\Temp\cclNDgic.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"Timer_1.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.Timer_1_Enable,"ax",%progbits
  20              		.align	2
  21              		.global	Timer_1_Enable
  22              		.thumb
  23              		.thumb_func
  24              		.type	Timer_1_Enable, %function
  25              	Timer_1_Enable:
  26              	.LFB1:
  27              		.file 1 "Generated_Source\\PSoC5\\Timer_1.c"
   1:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
   2:Generated_Source\PSoC5/Timer_1.c **** * File Name: Timer_1.c
   3:Generated_Source\PSoC5/Timer_1.c **** * Version 2.80
   4:Generated_Source\PSoC5/Timer_1.c **** *
   5:Generated_Source\PSoC5/Timer_1.c **** * Description:
   6:Generated_Source\PSoC5/Timer_1.c **** *  The Timer component consists of a 8, 16, 24 or 32-bit timer with
   7:Generated_Source\PSoC5/Timer_1.c **** *  a selectable period between 2 and 2^Width - 1.  The timer may free run
   8:Generated_Source\PSoC5/Timer_1.c **** *  or be used as a capture timer as well.  The capture can be initiated
   9:Generated_Source\PSoC5/Timer_1.c **** *  by a positive or negative edge signal as well as via software.
  10:Generated_Source\PSoC5/Timer_1.c **** *  A trigger input can be programmed to enable the timer on rising edge
  11:Generated_Source\PSoC5/Timer_1.c **** *  falling edge, either edge or continous run.
  12:Generated_Source\PSoC5/Timer_1.c **** *  Interrupts may be generated due to a terminal count condition
  13:Generated_Source\PSoC5/Timer_1.c **** *  or a capture event.
  14:Generated_Source\PSoC5/Timer_1.c **** *
  15:Generated_Source\PSoC5/Timer_1.c **** * Note:
  16:Generated_Source\PSoC5/Timer_1.c **** *
  17:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
  18:Generated_Source\PSoC5/Timer_1.c **** * Copyright 2008-2017, Cypress Semiconductor Corporation.  All rights reserved.
  19:Generated_Source\PSoC5/Timer_1.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:Generated_Source\PSoC5/Timer_1.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:Generated_Source\PSoC5/Timer_1.c **** * the software package with which this file was provided.
  22:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************/
  23:Generated_Source\PSoC5/Timer_1.c **** 
  24:Generated_Source\PSoC5/Timer_1.c **** #include "Timer_1.h"
  25:Generated_Source\PSoC5/Timer_1.c **** 
  26:Generated_Source\PSoC5/Timer_1.c **** uint8 Timer_1_initVar = 0u;
  27:Generated_Source\PSoC5/Timer_1.c **** 
  28:Generated_Source\PSoC5/Timer_1.c **** 
  29:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
  30:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_Init
ARM GAS  C:\Users\User\AppData\Local\Temp\cclNDgic.s 			page 2


  31:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
  32:Generated_Source\PSoC5/Timer_1.c **** *
  33:Generated_Source\PSoC5/Timer_1.c **** * Summary:
  34:Generated_Source\PSoC5/Timer_1.c **** *  Initialize to the schematic state
  35:Generated_Source\PSoC5/Timer_1.c **** *
  36:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
  37:Generated_Source\PSoC5/Timer_1.c **** *  void
  38:Generated_Source\PSoC5/Timer_1.c **** *
  39:Generated_Source\PSoC5/Timer_1.c **** * Return:
  40:Generated_Source\PSoC5/Timer_1.c **** *  void
  41:Generated_Source\PSoC5/Timer_1.c **** *
  42:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
  43:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_Init(void) 
  44:Generated_Source\PSoC5/Timer_1.c **** {
  45:Generated_Source\PSoC5/Timer_1.c ****     #if(!Timer_1_UsingFixedFunction)
  46:Generated_Source\PSoC5/Timer_1.c ****             /* Interrupt State Backup for Critical Region*/
  47:Generated_Source\PSoC5/Timer_1.c ****             uint8 Timer_1_interruptState;
  48:Generated_Source\PSoC5/Timer_1.c ****     #endif /* Interrupt state back up for Fixed Function only */
  49:Generated_Source\PSoC5/Timer_1.c **** 
  50:Generated_Source\PSoC5/Timer_1.c ****     #if (Timer_1_UsingFixedFunction)
  51:Generated_Source\PSoC5/Timer_1.c ****         /* Clear all bits but the enable bit (if it's already set) for Timer operation */
  52:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_CONTROL &= Timer_1_CTRL_ENABLE;
  53:Generated_Source\PSoC5/Timer_1.c **** 
  54:Generated_Source\PSoC5/Timer_1.c ****         /* Clear the mode bits for continuous run mode */
  55:Generated_Source\PSoC5/Timer_1.c ****         #if (CY_PSOC5A)
  56:Generated_Source\PSoC5/Timer_1.c ****             Timer_1_CONTROL2 &= ((uint8)(~Timer_1_CTRL_MODE_MASK));
  57:Generated_Source\PSoC5/Timer_1.c ****         #endif /* Clear bits in CONTROL2 only in PSOC5A */
  58:Generated_Source\PSoC5/Timer_1.c **** 
  59:Generated_Source\PSoC5/Timer_1.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
  60:Generated_Source\PSoC5/Timer_1.c ****             Timer_1_CONTROL3 &= ((uint8)(~Timer_1_CTRL_MODE_MASK));
  61:Generated_Source\PSoC5/Timer_1.c ****         #endif /* CONTROL3 register exists only in PSoC3 OR PSoC5LP */
  62:Generated_Source\PSoC5/Timer_1.c **** 
  63:Generated_Source\PSoC5/Timer_1.c ****         /* Check if One Shot mode is enabled i.e. RunMode !=0*/
  64:Generated_Source\PSoC5/Timer_1.c ****         #if (Timer_1_RunModeUsed != 0x0u)
  65:Generated_Source\PSoC5/Timer_1.c ****             /* Set 3rd bit of Control register to enable one shot mode */
  66:Generated_Source\PSoC5/Timer_1.c ****             Timer_1_CONTROL |= 0x04u;
  67:Generated_Source\PSoC5/Timer_1.c ****         #endif /* One Shot enabled only when RunModeUsed is not Continuous*/
  68:Generated_Source\PSoC5/Timer_1.c **** 
  69:Generated_Source\PSoC5/Timer_1.c ****         #if (Timer_1_RunModeUsed == 2)
  70:Generated_Source\PSoC5/Timer_1.c ****             #if (CY_PSOC5A)
  71:Generated_Source\PSoC5/Timer_1.c ****                 /* Set last 2 bits of control2 register if one shot(halt on
  72:Generated_Source\PSoC5/Timer_1.c ****                 interrupt) is enabled*/
  73:Generated_Source\PSoC5/Timer_1.c ****                 Timer_1_CONTROL2 |= 0x03u;
  74:Generated_Source\PSoC5/Timer_1.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL2 for PSoC5A */
  75:Generated_Source\PSoC5/Timer_1.c **** 
  76:Generated_Source\PSoC5/Timer_1.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  77:Generated_Source\PSoC5/Timer_1.c ****                 /* Set last 2 bits of control3 register if one shot(halt on
  78:Generated_Source\PSoC5/Timer_1.c ****                 interrupt) is enabled*/
  79:Generated_Source\PSoC5/Timer_1.c ****                 Timer_1_CONTROL3 |= 0x03u;
  80:Generated_Source\PSoC5/Timer_1.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL3 for PSoC3 or PSoC5LP */
  81:Generated_Source\PSoC5/Timer_1.c **** 
  82:Generated_Source\PSoC5/Timer_1.c ****         #endif /* Remove section if One Shot Halt on Interrupt is not enabled */
  83:Generated_Source\PSoC5/Timer_1.c **** 
  84:Generated_Source\PSoC5/Timer_1.c ****         #if (Timer_1_UsingHWEnable != 0)
  85:Generated_Source\PSoC5/Timer_1.c ****             #if (CY_PSOC5A)
  86:Generated_Source\PSoC5/Timer_1.c ****                 /* Set the default Run Mode of the Timer to Continuous */
  87:Generated_Source\PSoC5/Timer_1.c ****                 Timer_1_CONTROL2 |= Timer_1_CTRL_MODE_PULSEWIDTH;
ARM GAS  C:\Users\User\AppData\Local\Temp\cclNDgic.s 			page 3


  88:Generated_Source\PSoC5/Timer_1.c ****             #endif /* Set Continuous Run Mode in CONTROL2 for PSoC5A */
  89:Generated_Source\PSoC5/Timer_1.c **** 
  90:Generated_Source\PSoC5/Timer_1.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  91:Generated_Source\PSoC5/Timer_1.c ****                 /* Clear and Set ROD and COD bits of CFG2 register */
  92:Generated_Source\PSoC5/Timer_1.c ****                 Timer_1_CONTROL3 &= ((uint8)(~Timer_1_CTRL_RCOD_MASK));
  93:Generated_Source\PSoC5/Timer_1.c ****                 Timer_1_CONTROL3 |= Timer_1_CTRL_RCOD;
  94:Generated_Source\PSoC5/Timer_1.c **** 
  95:Generated_Source\PSoC5/Timer_1.c ****                 /* Clear and Enable the HW enable bit in CFG2 register */
  96:Generated_Source\PSoC5/Timer_1.c ****                 Timer_1_CONTROL3 &= ((uint8)(~Timer_1_CTRL_ENBL_MASK));
  97:Generated_Source\PSoC5/Timer_1.c ****                 Timer_1_CONTROL3 |= Timer_1_CTRL_ENBL;
  98:Generated_Source\PSoC5/Timer_1.c **** 
  99:Generated_Source\PSoC5/Timer_1.c ****                 /* Set the default Run Mode of the Timer to Continuous */
 100:Generated_Source\PSoC5/Timer_1.c ****                 Timer_1_CONTROL3 |= Timer_1_CTRL_MODE_CONTINUOUS;
 101:Generated_Source\PSoC5/Timer_1.c ****             #endif /* Set Continuous Run Mode in CONTROL3 for PSoC3ES3 or PSoC5A */
 102:Generated_Source\PSoC5/Timer_1.c **** 
 103:Generated_Source\PSoC5/Timer_1.c ****         #endif /* Configure Run Mode with hardware enable */
 104:Generated_Source\PSoC5/Timer_1.c **** 
 105:Generated_Source\PSoC5/Timer_1.c ****         /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 106:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_RT1 &= ((uint8)(~Timer_1_RT1_MASK));
 107:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_RT1 |= Timer_1_SYNC;
 108:Generated_Source\PSoC5/Timer_1.c **** 
 109:Generated_Source\PSoC5/Timer_1.c ****         /*Enable DSI Sync all all inputs of the Timer*/
 110:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_RT1 &= ((uint8)(~Timer_1_SYNCDSI_MASK));
 111:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_RT1 |= Timer_1_SYNCDSI_EN;
 112:Generated_Source\PSoC5/Timer_1.c **** 
 113:Generated_Source\PSoC5/Timer_1.c ****         /* Set the IRQ to use the status register interrupts */
 114:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_CONTROL2 |= Timer_1_CTRL2_IRQ_SEL;
 115:Generated_Source\PSoC5/Timer_1.c ****     #endif /* Configuring registers of fixed function implementation */
 116:Generated_Source\PSoC5/Timer_1.c **** 
 117:Generated_Source\PSoC5/Timer_1.c ****     /* Set Initial values from Configuration */
 118:Generated_Source\PSoC5/Timer_1.c ****     Timer_1_WritePeriod(Timer_1_INIT_PERIOD);
 119:Generated_Source\PSoC5/Timer_1.c ****     Timer_1_WriteCounter(Timer_1_INIT_PERIOD);
 120:Generated_Source\PSoC5/Timer_1.c **** 
 121:Generated_Source\PSoC5/Timer_1.c ****     #if (Timer_1_UsingHWCaptureCounter)/* Capture counter is enabled */
 122:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_CAPTURE_COUNT_CTRL |= Timer_1_CNTR_ENABLE;
 123:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_SetCaptureCount(Timer_1_INIT_CAPTURE_COUNT);
 124:Generated_Source\PSoC5/Timer_1.c ****     #endif /* Configure capture counter value */
 125:Generated_Source\PSoC5/Timer_1.c **** 
 126:Generated_Source\PSoC5/Timer_1.c ****     #if (!Timer_1_UsingFixedFunction)
 127:Generated_Source\PSoC5/Timer_1.c ****         #if (Timer_1_SoftwareCaptureMode)
 128:Generated_Source\PSoC5/Timer_1.c ****             Timer_1_SetCaptureMode(Timer_1_INIT_CAPTURE_MODE);
 129:Generated_Source\PSoC5/Timer_1.c ****         #endif /* Set Capture Mode for UDB implementation if capture mode is software controlled */
 130:Generated_Source\PSoC5/Timer_1.c **** 
 131:Generated_Source\PSoC5/Timer_1.c ****         #if (Timer_1_SoftwareTriggerMode)
 132:Generated_Source\PSoC5/Timer_1.c ****             #if (!Timer_1_UDB_CONTROL_REG_REMOVED)
 133:Generated_Source\PSoC5/Timer_1.c ****                 if (0u == (Timer_1_CONTROL & Timer_1__B_TIMER__TM_SOFTWARE))
 134:Generated_Source\PSoC5/Timer_1.c ****                 {
 135:Generated_Source\PSoC5/Timer_1.c ****                     Timer_1_SetTriggerMode(Timer_1_INIT_TRIGGER_MODE);
 136:Generated_Source\PSoC5/Timer_1.c ****                 }
 137:Generated_Source\PSoC5/Timer_1.c ****             #endif /* (!Timer_1_UDB_CONTROL_REG_REMOVED) */
 138:Generated_Source\PSoC5/Timer_1.c ****         #endif /* Set trigger mode for UDB Implementation if trigger mode is software controlled */
 139:Generated_Source\PSoC5/Timer_1.c **** 
 140:Generated_Source\PSoC5/Timer_1.c ****         /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region critica
 141:Generated_Source\PSoC5/Timer_1.c ****         /* Enter Critical Region*/
 142:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_interruptState = CyEnterCriticalSection();
 143:Generated_Source\PSoC5/Timer_1.c **** 
 144:Generated_Source\PSoC5/Timer_1.c ****         /* Use the interrupt output of the status register for IRQ output */
ARM GAS  C:\Users\User\AppData\Local\Temp\cclNDgic.s 			page 4


 145:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_STATUS_AUX_CTRL |= Timer_1_STATUS_ACTL_INT_EN_MASK;
 146:Generated_Source\PSoC5/Timer_1.c **** 
 147:Generated_Source\PSoC5/Timer_1.c ****         /* Exit Critical Region*/
 148:Generated_Source\PSoC5/Timer_1.c ****         CyExitCriticalSection(Timer_1_interruptState);
 149:Generated_Source\PSoC5/Timer_1.c **** 
 150:Generated_Source\PSoC5/Timer_1.c ****         #if (Timer_1_EnableTriggerMode)
 151:Generated_Source\PSoC5/Timer_1.c ****             Timer_1_EnableTrigger();
 152:Generated_Source\PSoC5/Timer_1.c ****         #endif /* Set Trigger enable bit for UDB implementation in the control register*/
 153:Generated_Source\PSoC5/Timer_1.c **** 		
 154:Generated_Source\PSoC5/Timer_1.c **** 		
 155:Generated_Source\PSoC5/Timer_1.c ****         #if (Timer_1_InterruptOnCaptureCount && !Timer_1_UDB_CONTROL_REG_REMOVED)
 156:Generated_Source\PSoC5/Timer_1.c ****             Timer_1_SetInterruptCount(Timer_1_INIT_INT_CAPTURE_COUNT);
 157:Generated_Source\PSoC5/Timer_1.c ****         #endif /* Set interrupt count in UDB implementation if interrupt count feature is checked.*
 158:Generated_Source\PSoC5/Timer_1.c **** 
 159:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_ClearFIFO();
 160:Generated_Source\PSoC5/Timer_1.c ****     #endif /* Configure additional features of UDB implementation */
 161:Generated_Source\PSoC5/Timer_1.c **** 
 162:Generated_Source\PSoC5/Timer_1.c ****     Timer_1_SetInterruptMode(Timer_1_INIT_INTERRUPT_MODE);
 163:Generated_Source\PSoC5/Timer_1.c **** }
 164:Generated_Source\PSoC5/Timer_1.c **** 
 165:Generated_Source\PSoC5/Timer_1.c **** 
 166:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 167:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_Enable
 168:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 169:Generated_Source\PSoC5/Timer_1.c **** *
 170:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 171:Generated_Source\PSoC5/Timer_1.c **** *  Enable the Timer
 172:Generated_Source\PSoC5/Timer_1.c **** *
 173:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 174:Generated_Source\PSoC5/Timer_1.c **** *  void
 175:Generated_Source\PSoC5/Timer_1.c **** *
 176:Generated_Source\PSoC5/Timer_1.c **** * Return:
 177:Generated_Source\PSoC5/Timer_1.c **** *  void
 178:Generated_Source\PSoC5/Timer_1.c **** *
 179:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 180:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_Enable(void) 
 181:Generated_Source\PSoC5/Timer_1.c **** {
  28              		.loc 1 181 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE1:
  36              		.size	Timer_1_Enable, .-Timer_1_Enable
  37 0002 00BF     		.section	.text.Timer_1_Stop,"ax",%progbits
  38              		.align	2
  39              		.global	Timer_1_Stop
  40              		.thumb
  41              		.thumb_func
  42              		.type	Timer_1_Stop, %function
  43              	Timer_1_Stop:
  44              	.LFB3:
 182:Generated_Source\PSoC5/Timer_1.c ****     /* Globally Enable the Fixed Function Block chosen */
 183:Generated_Source\PSoC5/Timer_1.c ****     #if (Timer_1_UsingFixedFunction)
 184:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_GLOBAL_ENABLE |= Timer_1_BLOCK_EN_MASK;
ARM GAS  C:\Users\User\AppData\Local\Temp\cclNDgic.s 			page 5


 185:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_GLOBAL_STBY_ENABLE |= Timer_1_BLOCK_STBY_EN_MASK;
 186:Generated_Source\PSoC5/Timer_1.c ****     #endif /* Set Enable bit for enabling Fixed function timer*/
 187:Generated_Source\PSoC5/Timer_1.c **** 
 188:Generated_Source\PSoC5/Timer_1.c ****     /* Remove assignment if control register is removed */
 189:Generated_Source\PSoC5/Timer_1.c ****     #if (!Timer_1_UDB_CONTROL_REG_REMOVED || Timer_1_UsingFixedFunction)
 190:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_CONTROL |= Timer_1_CTRL_ENABLE;
 191:Generated_Source\PSoC5/Timer_1.c ****     #endif /* Remove assignment if control register is removed */
 192:Generated_Source\PSoC5/Timer_1.c **** }
 193:Generated_Source\PSoC5/Timer_1.c **** 
 194:Generated_Source\PSoC5/Timer_1.c **** 
 195:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 196:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_Start
 197:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 198:Generated_Source\PSoC5/Timer_1.c **** *
 199:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 200:Generated_Source\PSoC5/Timer_1.c **** *  The start function initializes the timer with the default values, the
 201:Generated_Source\PSoC5/Timer_1.c **** *  enables the timerto begin counting.  It does not enable interrupts,
 202:Generated_Source\PSoC5/Timer_1.c **** *  the EnableInt command should be called if interrupt generation is required.
 203:Generated_Source\PSoC5/Timer_1.c **** *
 204:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 205:Generated_Source\PSoC5/Timer_1.c **** *  void
 206:Generated_Source\PSoC5/Timer_1.c **** *
 207:Generated_Source\PSoC5/Timer_1.c **** * Return:
 208:Generated_Source\PSoC5/Timer_1.c **** *  void
 209:Generated_Source\PSoC5/Timer_1.c **** *
 210:Generated_Source\PSoC5/Timer_1.c **** * Global variables:
 211:Generated_Source\PSoC5/Timer_1.c **** *  Timer_1_initVar: Is modified when this function is called for the
 212:Generated_Source\PSoC5/Timer_1.c **** *   first time. Is used to ensure that initialization happens only once.
 213:Generated_Source\PSoC5/Timer_1.c **** *
 214:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 215:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_Start(void) 
 216:Generated_Source\PSoC5/Timer_1.c **** {
 217:Generated_Source\PSoC5/Timer_1.c ****     if(Timer_1_initVar == 0u)
 218:Generated_Source\PSoC5/Timer_1.c ****     {
 219:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_Init();
 220:Generated_Source\PSoC5/Timer_1.c **** 
 221:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_initVar = 1u;   /* Clear this bit for Initialization */
 222:Generated_Source\PSoC5/Timer_1.c ****     }
 223:Generated_Source\PSoC5/Timer_1.c **** 
 224:Generated_Source\PSoC5/Timer_1.c ****     /* Enable the Timer */
 225:Generated_Source\PSoC5/Timer_1.c ****     Timer_1_Enable();
 226:Generated_Source\PSoC5/Timer_1.c **** }
 227:Generated_Source\PSoC5/Timer_1.c **** 
 228:Generated_Source\PSoC5/Timer_1.c **** 
 229:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 230:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_Stop
 231:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 232:Generated_Source\PSoC5/Timer_1.c **** *
 233:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 234:Generated_Source\PSoC5/Timer_1.c **** *  The stop function halts the timer, but does not change any modes or disable
 235:Generated_Source\PSoC5/Timer_1.c **** *  interrupts.
 236:Generated_Source\PSoC5/Timer_1.c **** *
 237:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 238:Generated_Source\PSoC5/Timer_1.c **** *  void
 239:Generated_Source\PSoC5/Timer_1.c **** *
 240:Generated_Source\PSoC5/Timer_1.c **** * Return:
 241:Generated_Source\PSoC5/Timer_1.c **** *  void
ARM GAS  C:\Users\User\AppData\Local\Temp\cclNDgic.s 			page 6


 242:Generated_Source\PSoC5/Timer_1.c **** *
 243:Generated_Source\PSoC5/Timer_1.c **** * Side Effects: If the Enable mode is set to Hardware only then this function
 244:Generated_Source\PSoC5/Timer_1.c **** *               has no effect on the operation of the timer.
 245:Generated_Source\PSoC5/Timer_1.c **** *
 246:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 247:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_Stop(void) 
 248:Generated_Source\PSoC5/Timer_1.c **** {
  45              		.loc 1 248 0
  46              		.cfi_startproc
  47              		@ args = 0, pretend = 0, frame = 0
  48              		@ frame_needed = 0, uses_anonymous_args = 0
  49              		@ link register save eliminated.
  50 0000 7047     		bx	lr
  51              		.cfi_endproc
  52              	.LFE3:
  53              		.size	Timer_1_Stop, .-Timer_1_Stop
  54 0002 00BF     		.section	.text.Timer_1_SetInterruptMode,"ax",%progbits
  55              		.align	2
  56              		.global	Timer_1_SetInterruptMode
  57              		.thumb
  58              		.thumb_func
  59              		.type	Timer_1_SetInterruptMode, %function
  60              	Timer_1_SetInterruptMode:
  61              	.LFB4:
 249:Generated_Source\PSoC5/Timer_1.c ****     /* Disable Timer */
 250:Generated_Source\PSoC5/Timer_1.c ****     #if(!Timer_1_UDB_CONTROL_REG_REMOVED || Timer_1_UsingFixedFunction)
 251:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_CONTROL &= ((uint8)(~Timer_1_CTRL_ENABLE));
 252:Generated_Source\PSoC5/Timer_1.c ****     #endif /* Remove assignment if control register is removed */
 253:Generated_Source\PSoC5/Timer_1.c **** 
 254:Generated_Source\PSoC5/Timer_1.c ****     /* Globally disable the Fixed Function Block chosen */
 255:Generated_Source\PSoC5/Timer_1.c ****     #if (Timer_1_UsingFixedFunction)
 256:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_GLOBAL_ENABLE &= ((uint8)(~Timer_1_BLOCK_EN_MASK));
 257:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_GLOBAL_STBY_ENABLE &= ((uint8)(~Timer_1_BLOCK_STBY_EN_MASK));
 258:Generated_Source\PSoC5/Timer_1.c ****     #endif /* Disable global enable for the Timer Fixed function block to stop the Timer*/
 259:Generated_Source\PSoC5/Timer_1.c **** }
 260:Generated_Source\PSoC5/Timer_1.c **** 
 261:Generated_Source\PSoC5/Timer_1.c **** 
 262:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 263:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_SetInterruptMode
 264:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 265:Generated_Source\PSoC5/Timer_1.c **** *
 266:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 267:Generated_Source\PSoC5/Timer_1.c **** *  This function selects which of the interrupt inputs may cause an interrupt.
 268:Generated_Source\PSoC5/Timer_1.c **** *  The twosources are caputure and terminal.  One, both or neither may
 269:Generated_Source\PSoC5/Timer_1.c **** *  be selected.
 270:Generated_Source\PSoC5/Timer_1.c **** *
 271:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 272:Generated_Source\PSoC5/Timer_1.c **** *  interruptMode:   This parameter is used to enable interrups on either/or
 273:Generated_Source\PSoC5/Timer_1.c **** *                   terminal count or capture.
 274:Generated_Source\PSoC5/Timer_1.c **** *
 275:Generated_Source\PSoC5/Timer_1.c **** * Return:
 276:Generated_Source\PSoC5/Timer_1.c **** *  void
 277:Generated_Source\PSoC5/Timer_1.c **** *
 278:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 279:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_SetInterruptMode(uint8 interruptMode) 
 280:Generated_Source\PSoC5/Timer_1.c **** {
  62              		.loc 1 280 0
ARM GAS  C:\Users\User\AppData\Local\Temp\cclNDgic.s 			page 7


  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 0, uses_anonymous_args = 0
  66              		@ link register save eliminated.
  67              	.LVL0:
 281:Generated_Source\PSoC5/Timer_1.c ****     Timer_1_STATUS_MASK = interruptMode;
  68              		.loc 1 281 0
  69 0000 014B     		ldr	r3, .L4
  70 0002 1870     		strb	r0, [r3]
  71 0004 7047     		bx	lr
  72              	.L5:
  73 0006 00BF     		.align	2
  74              	.L4:
  75 0008 86650040 		.word	1073767814
  76              		.cfi_endproc
  77              	.LFE4:
  78              		.size	Timer_1_SetInterruptMode, .-Timer_1_SetInterruptMode
  79              		.section	.text.Timer_1_SoftwareCapture,"ax",%progbits
  80              		.align	2
  81              		.global	Timer_1_SoftwareCapture
  82              		.thumb
  83              		.thumb_func
  84              		.type	Timer_1_SoftwareCapture, %function
  85              	Timer_1_SoftwareCapture:
  86              	.LFB5:
 282:Generated_Source\PSoC5/Timer_1.c **** }
 283:Generated_Source\PSoC5/Timer_1.c **** 
 284:Generated_Source\PSoC5/Timer_1.c **** 
 285:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 286:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_SoftwareCapture
 287:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 288:Generated_Source\PSoC5/Timer_1.c **** *
 289:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 290:Generated_Source\PSoC5/Timer_1.c **** *  This function forces a capture independent of the capture signal.
 291:Generated_Source\PSoC5/Timer_1.c **** *
 292:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 293:Generated_Source\PSoC5/Timer_1.c **** *  void
 294:Generated_Source\PSoC5/Timer_1.c **** *
 295:Generated_Source\PSoC5/Timer_1.c **** * Return:
 296:Generated_Source\PSoC5/Timer_1.c **** *  void
 297:Generated_Source\PSoC5/Timer_1.c **** *
 298:Generated_Source\PSoC5/Timer_1.c **** * Side Effects:
 299:Generated_Source\PSoC5/Timer_1.c **** *  An existing hardware capture could be overwritten.
 300:Generated_Source\PSoC5/Timer_1.c **** *
 301:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 302:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_SoftwareCapture(void) 
 303:Generated_Source\PSoC5/Timer_1.c **** {
  87              		.loc 1 303 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 0
  90              		@ frame_needed = 0, uses_anonymous_args = 0
  91              		@ link register save eliminated.
 304:Generated_Source\PSoC5/Timer_1.c ****     /* Generate a software capture by reading the counter register */
 305:Generated_Source\PSoC5/Timer_1.c ****     #if(Timer_1_UsingFixedFunction)
 306:Generated_Source\PSoC5/Timer_1.c ****         (void)CY_GET_REG16(Timer_1_COUNTER_LSB_PTR);
 307:Generated_Source\PSoC5/Timer_1.c ****     #else
 308:Generated_Source\PSoC5/Timer_1.c ****         (void)CY_GET_REG8(Timer_1_COUNTER_LSB_PTR_8BIT);
ARM GAS  C:\Users\User\AppData\Local\Temp\cclNDgic.s 			page 8


  92              		.loc 1 308 0
  93 0000 014B     		ldr	r3, .L7
  94 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  95 0004 7047     		bx	lr
  96              	.L8:
  97 0006 00BF     		.align	2
  98              	.L7:
  99 0008 06650040 		.word	1073767686
 100              		.cfi_endproc
 101              	.LFE5:
 102              		.size	Timer_1_SoftwareCapture, .-Timer_1_SoftwareCapture
 103              		.section	.text.Timer_1_ReadStatusRegister,"ax",%progbits
 104              		.align	2
 105              		.global	Timer_1_ReadStatusRegister
 106              		.thumb
 107              		.thumb_func
 108              		.type	Timer_1_ReadStatusRegister, %function
 109              	Timer_1_ReadStatusRegister:
 110              	.LFB6:
 309:Generated_Source\PSoC5/Timer_1.c ****     #endif/* (Timer_1_UsingFixedFunction) */
 310:Generated_Source\PSoC5/Timer_1.c ****     /* Capture Data is now in the FIFO */
 311:Generated_Source\PSoC5/Timer_1.c **** }
 312:Generated_Source\PSoC5/Timer_1.c **** 
 313:Generated_Source\PSoC5/Timer_1.c **** 
 314:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 315:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_ReadStatusRegister
 316:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 317:Generated_Source\PSoC5/Timer_1.c **** *
 318:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 319:Generated_Source\PSoC5/Timer_1.c **** *  Reads the status register and returns it's state. This function should use
 320:Generated_Source\PSoC5/Timer_1.c **** *  defined types for the bit-field information as the bits in this register may
 321:Generated_Source\PSoC5/Timer_1.c **** *  be permuteable.
 322:Generated_Source\PSoC5/Timer_1.c **** *
 323:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 324:Generated_Source\PSoC5/Timer_1.c **** *  void
 325:Generated_Source\PSoC5/Timer_1.c **** *
 326:Generated_Source\PSoC5/Timer_1.c **** * Return:
 327:Generated_Source\PSoC5/Timer_1.c **** *  The contents of the status register
 328:Generated_Source\PSoC5/Timer_1.c **** *
 329:Generated_Source\PSoC5/Timer_1.c **** * Side Effects:
 330:Generated_Source\PSoC5/Timer_1.c **** *  Status register bits may be clear on read.
 331:Generated_Source\PSoC5/Timer_1.c **** *
 332:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 333:Generated_Source\PSoC5/Timer_1.c **** uint8   Timer_1_ReadStatusRegister(void) 
 334:Generated_Source\PSoC5/Timer_1.c **** {
 111              		.loc 1 334 0
 112              		.cfi_startproc
 113              		@ args = 0, pretend = 0, frame = 0
 114              		@ frame_needed = 0, uses_anonymous_args = 0
 115              		@ link register save eliminated.
 335:Generated_Source\PSoC5/Timer_1.c ****     return (Timer_1_STATUS);
 116              		.loc 1 335 0
 117 0000 014B     		ldr	r3, .L10
 118 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 336:Generated_Source\PSoC5/Timer_1.c **** }
 119              		.loc 1 336 0
 120 0004 7047     		bx	lr
ARM GAS  C:\Users\User\AppData\Local\Temp\cclNDgic.s 			page 9


 121              	.L11:
 122 0006 00BF     		.align	2
 123              	.L10:
 124 0008 66650040 		.word	1073767782
 125              		.cfi_endproc
 126              	.LFE6:
 127              		.size	Timer_1_ReadStatusRegister, .-Timer_1_ReadStatusRegister
 128              		.section	.text.Timer_1_ReadPeriod,"ax",%progbits
 129              		.align	2
 130              		.global	Timer_1_ReadPeriod
 131              		.thumb
 132              		.thumb_func
 133              		.type	Timer_1_ReadPeriod, %function
 134              	Timer_1_ReadPeriod:
 135              	.LFB7:
 337:Generated_Source\PSoC5/Timer_1.c **** 
 338:Generated_Source\PSoC5/Timer_1.c **** 
 339:Generated_Source\PSoC5/Timer_1.c **** #if (!Timer_1_UDB_CONTROL_REG_REMOVED) /* Remove API if control register is unused */
 340:Generated_Source\PSoC5/Timer_1.c **** 
 341:Generated_Source\PSoC5/Timer_1.c **** 
 342:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 343:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_ReadControlRegister
 344:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 345:Generated_Source\PSoC5/Timer_1.c **** *
 346:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 347:Generated_Source\PSoC5/Timer_1.c **** *  Reads the control register and returns it's value.
 348:Generated_Source\PSoC5/Timer_1.c **** *
 349:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 350:Generated_Source\PSoC5/Timer_1.c **** *  void
 351:Generated_Source\PSoC5/Timer_1.c **** *
 352:Generated_Source\PSoC5/Timer_1.c **** * Return:
 353:Generated_Source\PSoC5/Timer_1.c **** *  The contents of the control register
 354:Generated_Source\PSoC5/Timer_1.c **** *
 355:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 356:Generated_Source\PSoC5/Timer_1.c **** uint8 Timer_1_ReadControlRegister(void) 
 357:Generated_Source\PSoC5/Timer_1.c **** {
 358:Generated_Source\PSoC5/Timer_1.c ****     #if (!Timer_1_UDB_CONTROL_REG_REMOVED) 
 359:Generated_Source\PSoC5/Timer_1.c ****         return ((uint8)Timer_1_CONTROL);
 360:Generated_Source\PSoC5/Timer_1.c ****     #else
 361:Generated_Source\PSoC5/Timer_1.c ****         return (0);
 362:Generated_Source\PSoC5/Timer_1.c ****     #endif /* (!Timer_1_UDB_CONTROL_REG_REMOVED) */
 363:Generated_Source\PSoC5/Timer_1.c **** }
 364:Generated_Source\PSoC5/Timer_1.c **** 
 365:Generated_Source\PSoC5/Timer_1.c **** 
 366:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 367:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_WriteControlRegister
 368:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 369:Generated_Source\PSoC5/Timer_1.c **** *
 370:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 371:Generated_Source\PSoC5/Timer_1.c **** *  Sets the bit-field of the control register.
 372:Generated_Source\PSoC5/Timer_1.c **** *
 373:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 374:Generated_Source\PSoC5/Timer_1.c **** *  control: The contents of the control register
 375:Generated_Source\PSoC5/Timer_1.c **** *
 376:Generated_Source\PSoC5/Timer_1.c **** * Return:
 377:Generated_Source\PSoC5/Timer_1.c **** *
 378:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
ARM GAS  C:\Users\User\AppData\Local\Temp\cclNDgic.s 			page 10


 379:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_WriteControlRegister(uint8 control) 
 380:Generated_Source\PSoC5/Timer_1.c **** {
 381:Generated_Source\PSoC5/Timer_1.c ****     #if (!Timer_1_UDB_CONTROL_REG_REMOVED) 
 382:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_CONTROL = control;
 383:Generated_Source\PSoC5/Timer_1.c ****     #else
 384:Generated_Source\PSoC5/Timer_1.c ****         control = 0u;
 385:Generated_Source\PSoC5/Timer_1.c ****     #endif /* (!Timer_1_UDB_CONTROL_REG_REMOVED) */
 386:Generated_Source\PSoC5/Timer_1.c **** }
 387:Generated_Source\PSoC5/Timer_1.c **** 
 388:Generated_Source\PSoC5/Timer_1.c **** #endif /* Remove API if control register is unused */
 389:Generated_Source\PSoC5/Timer_1.c **** 
 390:Generated_Source\PSoC5/Timer_1.c **** 
 391:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 392:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_ReadPeriod
 393:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 394:Generated_Source\PSoC5/Timer_1.c **** *
 395:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 396:Generated_Source\PSoC5/Timer_1.c **** *  This function returns the current value of the Period.
 397:Generated_Source\PSoC5/Timer_1.c **** *
 398:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 399:Generated_Source\PSoC5/Timer_1.c **** *  void
 400:Generated_Source\PSoC5/Timer_1.c **** *
 401:Generated_Source\PSoC5/Timer_1.c **** * Return:
 402:Generated_Source\PSoC5/Timer_1.c **** *  The present value of the counter.
 403:Generated_Source\PSoC5/Timer_1.c **** *
 404:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 405:Generated_Source\PSoC5/Timer_1.c **** uint8 Timer_1_ReadPeriod(void) 
 406:Generated_Source\PSoC5/Timer_1.c **** {
 136              		.loc 1 406 0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 0
 139              		@ frame_needed = 0, uses_anonymous_args = 0
 140              		@ link register save eliminated.
 407:Generated_Source\PSoC5/Timer_1.c ****    #if(Timer_1_UsingFixedFunction)
 408:Generated_Source\PSoC5/Timer_1.c ****        return ((uint8)CY_GET_REG16(Timer_1_PERIOD_LSB_PTR));
 409:Generated_Source\PSoC5/Timer_1.c ****    #else
 410:Generated_Source\PSoC5/Timer_1.c ****        return (CY_GET_REG8(Timer_1_PERIOD_LSB_PTR));
 141              		.loc 1 410 0
 142 0000 014B     		ldr	r3, .L13
 143 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 411:Generated_Source\PSoC5/Timer_1.c ****    #endif /* (Timer_1_UsingFixedFunction) */
 412:Generated_Source\PSoC5/Timer_1.c **** }
 144              		.loc 1 412 0
 145 0004 7047     		bx	lr
 146              	.L14:
 147 0006 00BF     		.align	2
 148              	.L13:
 149 0008 26650040 		.word	1073767718
 150              		.cfi_endproc
 151              	.LFE7:
 152              		.size	Timer_1_ReadPeriod, .-Timer_1_ReadPeriod
 153              		.section	.text.Timer_1_WritePeriod,"ax",%progbits
 154              		.align	2
 155              		.global	Timer_1_WritePeriod
 156              		.thumb
 157              		.thumb_func
 158              		.type	Timer_1_WritePeriod, %function
ARM GAS  C:\Users\User\AppData\Local\Temp\cclNDgic.s 			page 11


 159              	Timer_1_WritePeriod:
 160              	.LFB8:
 413:Generated_Source\PSoC5/Timer_1.c **** 
 414:Generated_Source\PSoC5/Timer_1.c **** 
 415:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 416:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_WritePeriod
 417:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 418:Generated_Source\PSoC5/Timer_1.c **** *
 419:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 420:Generated_Source\PSoC5/Timer_1.c **** *  This function is used to change the period of the counter.  The new period
 421:Generated_Source\PSoC5/Timer_1.c **** *  will be loaded the next time terminal count is detected.
 422:Generated_Source\PSoC5/Timer_1.c **** *
 423:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 424:Generated_Source\PSoC5/Timer_1.c **** *  period: This value may be between 1 and (2^Resolution)-1.  A value of 0 will
 425:Generated_Source\PSoC5/Timer_1.c **** *          result in the counter remaining at zero.
 426:Generated_Source\PSoC5/Timer_1.c **** *
 427:Generated_Source\PSoC5/Timer_1.c **** * Return:
 428:Generated_Source\PSoC5/Timer_1.c **** *  void
 429:Generated_Source\PSoC5/Timer_1.c **** *
 430:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 431:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_WritePeriod(uint8 period) 
 432:Generated_Source\PSoC5/Timer_1.c **** {
 161              		.loc 1 432 0
 162              		.cfi_startproc
 163              		@ args = 0, pretend = 0, frame = 0
 164              		@ frame_needed = 0, uses_anonymous_args = 0
 165              		@ link register save eliminated.
 166              	.LVL1:
 433:Generated_Source\PSoC5/Timer_1.c ****     #if(Timer_1_UsingFixedFunction)
 434:Generated_Source\PSoC5/Timer_1.c ****         uint16 period_temp = (uint16)period;
 435:Generated_Source\PSoC5/Timer_1.c ****         CY_SET_REG16(Timer_1_PERIOD_LSB_PTR, period_temp);
 436:Generated_Source\PSoC5/Timer_1.c ****     #else
 437:Generated_Source\PSoC5/Timer_1.c ****         CY_SET_REG8(Timer_1_PERIOD_LSB_PTR, period);
 167              		.loc 1 437 0
 168 0000 014B     		ldr	r3, .L16
 169 0002 1870     		strb	r0, [r3]
 170 0004 7047     		bx	lr
 171              	.L17:
 172 0006 00BF     		.align	2
 173              	.L16:
 174 0008 26650040 		.word	1073767718
 175              		.cfi_endproc
 176              	.LFE8:
 177              		.size	Timer_1_WritePeriod, .-Timer_1_WritePeriod
 178              		.section	.text.Timer_1_ReadCapture,"ax",%progbits
 179              		.align	2
 180              		.global	Timer_1_ReadCapture
 181              		.thumb
 182              		.thumb_func
 183              		.type	Timer_1_ReadCapture, %function
 184              	Timer_1_ReadCapture:
 185              	.LFB9:
 438:Generated_Source\PSoC5/Timer_1.c ****     #endif /*Write Period value with appropriate resolution suffix depending on UDB or fixed functi
 439:Generated_Source\PSoC5/Timer_1.c **** }
 440:Generated_Source\PSoC5/Timer_1.c **** 
 441:Generated_Source\PSoC5/Timer_1.c **** 
 442:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
ARM GAS  C:\Users\User\AppData\Local\Temp\cclNDgic.s 			page 12


 443:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_ReadCapture
 444:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 445:Generated_Source\PSoC5/Timer_1.c **** *
 446:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 447:Generated_Source\PSoC5/Timer_1.c **** *  This function returns the last value captured.
 448:Generated_Source\PSoC5/Timer_1.c **** *
 449:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 450:Generated_Source\PSoC5/Timer_1.c **** *  void
 451:Generated_Source\PSoC5/Timer_1.c **** *
 452:Generated_Source\PSoC5/Timer_1.c **** * Return:
 453:Generated_Source\PSoC5/Timer_1.c **** *  Present Capture value.
 454:Generated_Source\PSoC5/Timer_1.c **** *
 455:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 456:Generated_Source\PSoC5/Timer_1.c **** uint8 Timer_1_ReadCapture(void) 
 457:Generated_Source\PSoC5/Timer_1.c **** {
 186              		.loc 1 457 0
 187              		.cfi_startproc
 188              		@ args = 0, pretend = 0, frame = 0
 189              		@ frame_needed = 0, uses_anonymous_args = 0
 190              		@ link register save eliminated.
 458:Generated_Source\PSoC5/Timer_1.c ****    #if(Timer_1_UsingFixedFunction)
 459:Generated_Source\PSoC5/Timer_1.c ****        return ((uint8)CY_GET_REG16(Timer_1_CAPTURE_LSB_PTR));
 460:Generated_Source\PSoC5/Timer_1.c ****    #else
 461:Generated_Source\PSoC5/Timer_1.c ****        return (CY_GET_REG8(Timer_1_CAPTURE_LSB_PTR));
 191              		.loc 1 461 0
 192 0000 014B     		ldr	r3, .L19
 193 0002 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 462:Generated_Source\PSoC5/Timer_1.c ****    #endif /* (Timer_1_UsingFixedFunction) */
 463:Generated_Source\PSoC5/Timer_1.c **** }
 194              		.loc 1 463 0
 195 0004 7047     		bx	lr
 196              	.L20:
 197 0006 00BF     		.align	2
 198              	.L19:
 199 0008 46650040 		.word	1073767750
 200              		.cfi_endproc
 201              	.LFE9:
 202              		.size	Timer_1_ReadCapture, .-Timer_1_ReadCapture
 203              		.section	.text.Timer_1_WriteCounter,"ax",%progbits
 204              		.align	2
 205              		.global	Timer_1_WriteCounter
 206              		.thumb
 207              		.thumb_func
 208              		.type	Timer_1_WriteCounter, %function
 209              	Timer_1_WriteCounter:
 210              	.LFB10:
 464:Generated_Source\PSoC5/Timer_1.c **** 
 465:Generated_Source\PSoC5/Timer_1.c **** 
 466:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 467:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_WriteCounter
 468:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 469:Generated_Source\PSoC5/Timer_1.c **** *
 470:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 471:Generated_Source\PSoC5/Timer_1.c **** *  This funtion is used to set the counter to a specific value
 472:Generated_Source\PSoC5/Timer_1.c **** *
 473:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 474:Generated_Source\PSoC5/Timer_1.c **** *  counter:  New counter value.
ARM GAS  C:\Users\User\AppData\Local\Temp\cclNDgic.s 			page 13


 475:Generated_Source\PSoC5/Timer_1.c **** *
 476:Generated_Source\PSoC5/Timer_1.c **** * Return:
 477:Generated_Source\PSoC5/Timer_1.c **** *  void
 478:Generated_Source\PSoC5/Timer_1.c **** *
 479:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 480:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_WriteCounter(uint8 counter) 
 481:Generated_Source\PSoC5/Timer_1.c **** {
 211              		.loc 1 481 0
 212              		.cfi_startproc
 213              		@ args = 0, pretend = 0, frame = 0
 214              		@ frame_needed = 0, uses_anonymous_args = 0
 215              		@ link register save eliminated.
 216              	.LVL2:
 482:Generated_Source\PSoC5/Timer_1.c ****    #if(Timer_1_UsingFixedFunction)
 483:Generated_Source\PSoC5/Timer_1.c ****         /* This functionality is removed until a FixedFunction HW update to
 484:Generated_Source\PSoC5/Timer_1.c ****          * allow this register to be written
 485:Generated_Source\PSoC5/Timer_1.c ****          */
 486:Generated_Source\PSoC5/Timer_1.c ****         CY_SET_REG16(Timer_1_COUNTER_LSB_PTR, (uint16)counter);
 487:Generated_Source\PSoC5/Timer_1.c ****         
 488:Generated_Source\PSoC5/Timer_1.c ****     #else
 489:Generated_Source\PSoC5/Timer_1.c ****         CY_SET_REG8(Timer_1_COUNTER_LSB_PTR, counter);
 217              		.loc 1 489 0
 218 0000 014B     		ldr	r3, .L22
 219 0002 1870     		strb	r0, [r3]
 220 0004 7047     		bx	lr
 221              	.L23:
 222 0006 00BF     		.align	2
 223              	.L22:
 224 0008 06650040 		.word	1073767686
 225              		.cfi_endproc
 226              	.LFE10:
 227              		.size	Timer_1_WriteCounter, .-Timer_1_WriteCounter
 228              		.section	.text.Timer_1_ReadCounter,"ax",%progbits
 229              		.align	2
 230              		.global	Timer_1_ReadCounter
 231              		.thumb
 232              		.thumb_func
 233              		.type	Timer_1_ReadCounter, %function
 234              	Timer_1_ReadCounter:
 235              	.LFB11:
 490:Generated_Source\PSoC5/Timer_1.c ****     #endif /* Set Write Counter only for the UDB implementation (Write Counter not available in fix
 491:Generated_Source\PSoC5/Timer_1.c **** }
 492:Generated_Source\PSoC5/Timer_1.c **** 
 493:Generated_Source\PSoC5/Timer_1.c **** 
 494:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 495:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_ReadCounter
 496:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 497:Generated_Source\PSoC5/Timer_1.c **** *
 498:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 499:Generated_Source\PSoC5/Timer_1.c **** *  This function returns the current counter value.
 500:Generated_Source\PSoC5/Timer_1.c **** *
 501:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 502:Generated_Source\PSoC5/Timer_1.c **** *  void
 503:Generated_Source\PSoC5/Timer_1.c **** *
 504:Generated_Source\PSoC5/Timer_1.c **** * Return:
 505:Generated_Source\PSoC5/Timer_1.c **** *  Present compare value.
 506:Generated_Source\PSoC5/Timer_1.c **** *
ARM GAS  C:\Users\User\AppData\Local\Temp\cclNDgic.s 			page 14


 507:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 508:Generated_Source\PSoC5/Timer_1.c **** uint8 Timer_1_ReadCounter(void) 
 509:Generated_Source\PSoC5/Timer_1.c **** {
 236              		.loc 1 509 0
 237              		.cfi_startproc
 238              		@ args = 0, pretend = 0, frame = 0
 239              		@ frame_needed = 0, uses_anonymous_args = 0
 240              		@ link register save eliminated.
 510:Generated_Source\PSoC5/Timer_1.c ****     /* Force capture by reading Accumulator */
 511:Generated_Source\PSoC5/Timer_1.c ****     /* Must first do a software capture to be able to read the counter */
 512:Generated_Source\PSoC5/Timer_1.c ****     /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 513:Generated_Source\PSoC5/Timer_1.c ****     #if(Timer_1_UsingFixedFunction)
 514:Generated_Source\PSoC5/Timer_1.c ****         (void)CY_GET_REG16(Timer_1_COUNTER_LSB_PTR);
 515:Generated_Source\PSoC5/Timer_1.c ****     #else
 516:Generated_Source\PSoC5/Timer_1.c ****         (void)CY_GET_REG8(Timer_1_COUNTER_LSB_PTR_8BIT);
 241              		.loc 1 516 0
 242 0000 024B     		ldr	r3, .L25
 243 0002 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 517:Generated_Source\PSoC5/Timer_1.c ****     #endif/* (Timer_1_UsingFixedFunction) */
 518:Generated_Source\PSoC5/Timer_1.c **** 
 519:Generated_Source\PSoC5/Timer_1.c ****     /* Read the data from the FIFO (or capture register for Fixed Function)*/
 520:Generated_Source\PSoC5/Timer_1.c ****     #if(Timer_1_UsingFixedFunction)
 521:Generated_Source\PSoC5/Timer_1.c ****         return ((uint8)CY_GET_REG16(Timer_1_CAPTURE_LSB_PTR));
 522:Generated_Source\PSoC5/Timer_1.c ****     #else
 523:Generated_Source\PSoC5/Timer_1.c ****         return (CY_GET_REG8(Timer_1_CAPTURE_LSB_PTR));
 244              		.loc 1 523 0
 245 0004 024B     		ldr	r3, .L25+4
 246 0006 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 524:Generated_Source\PSoC5/Timer_1.c ****     #endif /* (Timer_1_UsingFixedFunction) */
 525:Generated_Source\PSoC5/Timer_1.c **** }
 247              		.loc 1 525 0
 248 0008 7047     		bx	lr
 249              	.L26:
 250 000a 00BF     		.align	2
 251              	.L25:
 252 000c 06650040 		.word	1073767686
 253 0010 46650040 		.word	1073767750
 254              		.cfi_endproc
 255              	.LFE11:
 256              		.size	Timer_1_ReadCounter, .-Timer_1_ReadCounter
 257              		.section	.text.Timer_1_SetInterruptCount,"ax",%progbits
 258              		.align	2
 259              		.global	Timer_1_SetInterruptCount
 260              		.thumb
 261              		.thumb_func
 262              		.type	Timer_1_SetInterruptCount, %function
 263              	Timer_1_SetInterruptCount:
 264              	.LFB12:
 526:Generated_Source\PSoC5/Timer_1.c **** 
 527:Generated_Source\PSoC5/Timer_1.c **** 
 528:Generated_Source\PSoC5/Timer_1.c **** #if(!Timer_1_UsingFixedFunction) /* UDB Specific Functions */
 529:Generated_Source\PSoC5/Timer_1.c **** 
 530:Generated_Source\PSoC5/Timer_1.c ****     
 531:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 532:Generated_Source\PSoC5/Timer_1.c ****  * The functions below this point are only available using the UDB
 533:Generated_Source\PSoC5/Timer_1.c ****  * implementation.  If a feature is selected, then the API is enabled.
 534:Generated_Source\PSoC5/Timer_1.c ****  ******************************************************************************/
ARM GAS  C:\Users\User\AppData\Local\Temp\cclNDgic.s 			page 15


 535:Generated_Source\PSoC5/Timer_1.c **** 
 536:Generated_Source\PSoC5/Timer_1.c **** 
 537:Generated_Source\PSoC5/Timer_1.c **** #if (Timer_1_SoftwareCaptureMode)
 538:Generated_Source\PSoC5/Timer_1.c **** 
 539:Generated_Source\PSoC5/Timer_1.c **** 
 540:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 541:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_SetCaptureMode
 542:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 543:Generated_Source\PSoC5/Timer_1.c **** *
 544:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 545:Generated_Source\PSoC5/Timer_1.c **** *  This function sets the capture mode to either rising or falling edge.
 546:Generated_Source\PSoC5/Timer_1.c **** *
 547:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 548:Generated_Source\PSoC5/Timer_1.c **** *  captureMode: This parameter sets the capture mode of the UDB capture feature
 549:Generated_Source\PSoC5/Timer_1.c **** *  The parameter values are defined using the
 550:Generated_Source\PSoC5/Timer_1.c **** *  #define Timer_1__B_TIMER__CM_NONE 0
 551:Generated_Source\PSoC5/Timer_1.c **** #define Timer_1__B_TIMER__CM_RISINGEDGE 1
 552:Generated_Source\PSoC5/Timer_1.c **** #define Timer_1__B_TIMER__CM_FALLINGEDGE 2
 553:Generated_Source\PSoC5/Timer_1.c **** #define Timer_1__B_TIMER__CM_EITHEREDGE 3
 554:Generated_Source\PSoC5/Timer_1.c **** #define Timer_1__B_TIMER__CM_SOFTWARE 4
 555:Generated_Source\PSoC5/Timer_1.c ****  identifiers
 556:Generated_Source\PSoC5/Timer_1.c **** *  The following are the possible values of the parameter
 557:Generated_Source\PSoC5/Timer_1.c **** *  Timer_1__B_TIMER__CM_NONE        - Set Capture mode to None
 558:Generated_Source\PSoC5/Timer_1.c **** *  Timer_1__B_TIMER__CM_RISINGEDGE  - Rising edge of Capture input
 559:Generated_Source\PSoC5/Timer_1.c **** *  Timer_1__B_TIMER__CM_FALLINGEDGE - Falling edge of Capture input
 560:Generated_Source\PSoC5/Timer_1.c **** *  Timer_1__B_TIMER__CM_EITHEREDGE  - Either edge of Capture input
 561:Generated_Source\PSoC5/Timer_1.c **** *
 562:Generated_Source\PSoC5/Timer_1.c **** * Return:
 563:Generated_Source\PSoC5/Timer_1.c **** *  void
 564:Generated_Source\PSoC5/Timer_1.c **** *
 565:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 566:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_SetCaptureMode(uint8 captureMode) 
 567:Generated_Source\PSoC5/Timer_1.c **** {
 568:Generated_Source\PSoC5/Timer_1.c ****     /* This must only set to two bits of the control register associated */
 569:Generated_Source\PSoC5/Timer_1.c ****     captureMode = ((uint8)((uint8)captureMode << Timer_1_CTRL_CAP_MODE_SHIFT));
 570:Generated_Source\PSoC5/Timer_1.c ****     captureMode &= (Timer_1_CTRL_CAP_MODE_MASK);
 571:Generated_Source\PSoC5/Timer_1.c **** 
 572:Generated_Source\PSoC5/Timer_1.c ****     #if (!Timer_1_UDB_CONTROL_REG_REMOVED)
 573:Generated_Source\PSoC5/Timer_1.c ****         /* Clear the Current Setting */
 574:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_CONTROL &= ((uint8)(~Timer_1_CTRL_CAP_MODE_MASK));
 575:Generated_Source\PSoC5/Timer_1.c **** 
 576:Generated_Source\PSoC5/Timer_1.c ****         /* Write The New Setting */
 577:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_CONTROL |= captureMode;
 578:Generated_Source\PSoC5/Timer_1.c ****     #endif /* (!Timer_1_UDB_CONTROL_REG_REMOVED) */
 579:Generated_Source\PSoC5/Timer_1.c **** }
 580:Generated_Source\PSoC5/Timer_1.c **** #endif /* Remove API if Capture Mode is not Software Controlled */
 581:Generated_Source\PSoC5/Timer_1.c **** 
 582:Generated_Source\PSoC5/Timer_1.c **** 
 583:Generated_Source\PSoC5/Timer_1.c **** #if (Timer_1_SoftwareTriggerMode)
 584:Generated_Source\PSoC5/Timer_1.c **** 
 585:Generated_Source\PSoC5/Timer_1.c **** 
 586:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 587:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_SetTriggerMode
 588:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 589:Generated_Source\PSoC5/Timer_1.c **** *
 590:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 591:Generated_Source\PSoC5/Timer_1.c **** *  This function sets the trigger input mode
ARM GAS  C:\Users\User\AppData\Local\Temp\cclNDgic.s 			page 16


 592:Generated_Source\PSoC5/Timer_1.c **** *
 593:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 594:Generated_Source\PSoC5/Timer_1.c **** *  triggerMode: Pass one of the pre-defined Trigger Modes (except Software)
 595:Generated_Source\PSoC5/Timer_1.c ****     #define Timer_1__B_TIMER__TM_NONE 0x00u
 596:Generated_Source\PSoC5/Timer_1.c ****     #define Timer_1__B_TIMER__TM_RISINGEDGE 0x04u
 597:Generated_Source\PSoC5/Timer_1.c ****     #define Timer_1__B_TIMER__TM_FALLINGEDGE 0x08u
 598:Generated_Source\PSoC5/Timer_1.c ****     #define Timer_1__B_TIMER__TM_EITHEREDGE 0x0Cu
 599:Generated_Source\PSoC5/Timer_1.c ****     #define Timer_1__B_TIMER__TM_SOFTWARE 0x10u
 600:Generated_Source\PSoC5/Timer_1.c **** *
 601:Generated_Source\PSoC5/Timer_1.c **** * Return:
 602:Generated_Source\PSoC5/Timer_1.c **** *  void
 603:Generated_Source\PSoC5/Timer_1.c **** *
 604:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 605:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_SetTriggerMode(uint8 triggerMode) 
 606:Generated_Source\PSoC5/Timer_1.c **** {
 607:Generated_Source\PSoC5/Timer_1.c ****     /* This must only set to two bits of the control register associated */
 608:Generated_Source\PSoC5/Timer_1.c ****     triggerMode &= Timer_1_CTRL_TRIG_MODE_MASK;
 609:Generated_Source\PSoC5/Timer_1.c **** 
 610:Generated_Source\PSoC5/Timer_1.c ****     #if (!Timer_1_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is removed */
 611:Generated_Source\PSoC5/Timer_1.c ****     
 612:Generated_Source\PSoC5/Timer_1.c ****         /* Clear the Current Setting */
 613:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_CONTROL &= ((uint8)(~Timer_1_CTRL_TRIG_MODE_MASK));
 614:Generated_Source\PSoC5/Timer_1.c **** 
 615:Generated_Source\PSoC5/Timer_1.c ****         /* Write The New Setting */
 616:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_CONTROL |= (triggerMode | Timer_1__B_TIMER__TM_SOFTWARE);
 617:Generated_Source\PSoC5/Timer_1.c ****     #endif /* Remove code section if control register is not used */
 618:Generated_Source\PSoC5/Timer_1.c **** }
 619:Generated_Source\PSoC5/Timer_1.c **** #endif /* Remove API if Trigger Mode is not Software Controlled */
 620:Generated_Source\PSoC5/Timer_1.c **** 
 621:Generated_Source\PSoC5/Timer_1.c **** #if (Timer_1_EnableTriggerMode)
 622:Generated_Source\PSoC5/Timer_1.c **** 
 623:Generated_Source\PSoC5/Timer_1.c **** 
 624:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 625:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_EnableTrigger
 626:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 627:Generated_Source\PSoC5/Timer_1.c **** *
 628:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 629:Generated_Source\PSoC5/Timer_1.c **** *  Sets the control bit enabling Hardware Trigger mode
 630:Generated_Source\PSoC5/Timer_1.c **** *
 631:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 632:Generated_Source\PSoC5/Timer_1.c **** *  void
 633:Generated_Source\PSoC5/Timer_1.c **** *
 634:Generated_Source\PSoC5/Timer_1.c **** * Return:
 635:Generated_Source\PSoC5/Timer_1.c **** *  void
 636:Generated_Source\PSoC5/Timer_1.c **** *
 637:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 638:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_EnableTrigger(void) 
 639:Generated_Source\PSoC5/Timer_1.c **** {
 640:Generated_Source\PSoC5/Timer_1.c ****     #if (!Timer_1_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is removed */
 641:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_CONTROL |= Timer_1_CTRL_TRIG_EN;
 642:Generated_Source\PSoC5/Timer_1.c ****     #endif /* Remove code section if control register is not used */
 643:Generated_Source\PSoC5/Timer_1.c **** }
 644:Generated_Source\PSoC5/Timer_1.c **** 
 645:Generated_Source\PSoC5/Timer_1.c **** 
 646:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 647:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_DisableTrigger
 648:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
ARM GAS  C:\Users\User\AppData\Local\Temp\cclNDgic.s 			page 17


 649:Generated_Source\PSoC5/Timer_1.c **** *
 650:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 651:Generated_Source\PSoC5/Timer_1.c **** *  Clears the control bit enabling Hardware Trigger mode
 652:Generated_Source\PSoC5/Timer_1.c **** *
 653:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 654:Generated_Source\PSoC5/Timer_1.c **** *  void
 655:Generated_Source\PSoC5/Timer_1.c **** *
 656:Generated_Source\PSoC5/Timer_1.c **** * Return:
 657:Generated_Source\PSoC5/Timer_1.c **** *  void
 658:Generated_Source\PSoC5/Timer_1.c **** *
 659:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 660:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_DisableTrigger(void) 
 661:Generated_Source\PSoC5/Timer_1.c **** {
 662:Generated_Source\PSoC5/Timer_1.c ****     #if (!Timer_1_UDB_CONTROL_REG_REMOVED )   /* Remove assignment if control register is removed *
 663:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_CONTROL &= ((uint8)(~Timer_1_CTRL_TRIG_EN));
 664:Generated_Source\PSoC5/Timer_1.c ****     #endif /* Remove code section if control register is not used */
 665:Generated_Source\PSoC5/Timer_1.c **** }
 666:Generated_Source\PSoC5/Timer_1.c **** #endif /* Remove API is Trigger Mode is set to None */
 667:Generated_Source\PSoC5/Timer_1.c **** 
 668:Generated_Source\PSoC5/Timer_1.c **** #if(Timer_1_InterruptOnCaptureCount)
 669:Generated_Source\PSoC5/Timer_1.c **** 
 670:Generated_Source\PSoC5/Timer_1.c **** 
 671:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 672:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_SetInterruptCount
 673:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 674:Generated_Source\PSoC5/Timer_1.c **** *
 675:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 676:Generated_Source\PSoC5/Timer_1.c **** *  This function sets the capture count before an interrupt is triggered.
 677:Generated_Source\PSoC5/Timer_1.c **** *
 678:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 679:Generated_Source\PSoC5/Timer_1.c **** *  interruptCount:  A value between 0 and 3 is valid.  If the value is 0, then
 680:Generated_Source\PSoC5/Timer_1.c **** *                   an interrupt will occur each time a capture occurs.
 681:Generated_Source\PSoC5/Timer_1.c **** *                   A value of 1 to 3 will cause the interrupt
 682:Generated_Source\PSoC5/Timer_1.c **** *                   to delay by the same number of captures.
 683:Generated_Source\PSoC5/Timer_1.c **** *
 684:Generated_Source\PSoC5/Timer_1.c **** * Return:
 685:Generated_Source\PSoC5/Timer_1.c **** *  void
 686:Generated_Source\PSoC5/Timer_1.c **** *
 687:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 688:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_SetInterruptCount(uint8 interruptCount) 
 689:Generated_Source\PSoC5/Timer_1.c **** {
 265              		.loc 1 689 0
 266              		.cfi_startproc
 267              		@ args = 0, pretend = 0, frame = 0
 268              		@ frame_needed = 0, uses_anonymous_args = 0
 269              		@ link register save eliminated.
 270              	.LVL3:
 271 0000 7047     		bx	lr
 272              		.cfi_endproc
 273              	.LFE12:
 274              		.size	Timer_1_SetInterruptCount, .-Timer_1_SetInterruptCount
 275 0002 00BF     		.section	.text.Timer_1_ClearFIFO,"ax",%progbits
 276              		.align	2
 277              		.global	Timer_1_ClearFIFO
 278              		.thumb
 279              		.thumb_func
 280              		.type	Timer_1_ClearFIFO, %function
ARM GAS  C:\Users\User\AppData\Local\Temp\cclNDgic.s 			page 18


 281              	Timer_1_ClearFIFO:
 282              	.LFB13:
 690:Generated_Source\PSoC5/Timer_1.c ****     /* This must only set to two bits of the control register associated */
 691:Generated_Source\PSoC5/Timer_1.c ****     interruptCount &= Timer_1_CTRL_INTCNT_MASK;
 692:Generated_Source\PSoC5/Timer_1.c **** 
 693:Generated_Source\PSoC5/Timer_1.c ****     #if (!Timer_1_UDB_CONTROL_REG_REMOVED)
 694:Generated_Source\PSoC5/Timer_1.c ****         /* Clear the Current Setting */
 695:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_CONTROL &= ((uint8)(~Timer_1_CTRL_INTCNT_MASK));
 696:Generated_Source\PSoC5/Timer_1.c ****         /* Write The New Setting */
 697:Generated_Source\PSoC5/Timer_1.c ****         Timer_1_CONTROL |= interruptCount;
 698:Generated_Source\PSoC5/Timer_1.c ****     #endif /* (!Timer_1_UDB_CONTROL_REG_REMOVED) */
 699:Generated_Source\PSoC5/Timer_1.c **** }
 700:Generated_Source\PSoC5/Timer_1.c **** #endif /* Timer_1_InterruptOnCaptureCount */
 701:Generated_Source\PSoC5/Timer_1.c **** 
 702:Generated_Source\PSoC5/Timer_1.c **** 
 703:Generated_Source\PSoC5/Timer_1.c **** #if (Timer_1_UsingHWCaptureCounter)
 704:Generated_Source\PSoC5/Timer_1.c **** 
 705:Generated_Source\PSoC5/Timer_1.c **** 
 706:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 707:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_SetCaptureCount
 708:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 709:Generated_Source\PSoC5/Timer_1.c **** *
 710:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 711:Generated_Source\PSoC5/Timer_1.c **** *  This function sets the capture count
 712:Generated_Source\PSoC5/Timer_1.c **** *
 713:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 714:Generated_Source\PSoC5/Timer_1.c **** *  captureCount: A value between 2 and 127 inclusive is valid.  A value of 1
 715:Generated_Source\PSoC5/Timer_1.c **** *                to 127 will cause the interrupt to delay by the same number of
 716:Generated_Source\PSoC5/Timer_1.c **** *                captures.
 717:Generated_Source\PSoC5/Timer_1.c **** *
 718:Generated_Source\PSoC5/Timer_1.c **** * Return:
 719:Generated_Source\PSoC5/Timer_1.c **** *  void
 720:Generated_Source\PSoC5/Timer_1.c **** *
 721:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 722:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_SetCaptureCount(uint8 captureCount) 
 723:Generated_Source\PSoC5/Timer_1.c **** {
 724:Generated_Source\PSoC5/Timer_1.c ****     Timer_1_CAP_COUNT = captureCount;
 725:Generated_Source\PSoC5/Timer_1.c **** }
 726:Generated_Source\PSoC5/Timer_1.c **** 
 727:Generated_Source\PSoC5/Timer_1.c **** 
 728:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 729:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_ReadCaptureCount
 730:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 731:Generated_Source\PSoC5/Timer_1.c **** *
 732:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 733:Generated_Source\PSoC5/Timer_1.c **** *  This function reads the capture count setting
 734:Generated_Source\PSoC5/Timer_1.c **** *
 735:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 736:Generated_Source\PSoC5/Timer_1.c **** *  void
 737:Generated_Source\PSoC5/Timer_1.c **** *
 738:Generated_Source\PSoC5/Timer_1.c **** * Return:
 739:Generated_Source\PSoC5/Timer_1.c **** *  Returns the Capture Count Setting
 740:Generated_Source\PSoC5/Timer_1.c **** *
 741:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 742:Generated_Source\PSoC5/Timer_1.c **** uint8 Timer_1_ReadCaptureCount(void) 
 743:Generated_Source\PSoC5/Timer_1.c **** {
 744:Generated_Source\PSoC5/Timer_1.c ****     return ((uint8)Timer_1_CAP_COUNT);
ARM GAS  C:\Users\User\AppData\Local\Temp\cclNDgic.s 			page 19


 745:Generated_Source\PSoC5/Timer_1.c **** }
 746:Generated_Source\PSoC5/Timer_1.c **** #endif /* Timer_1_UsingHWCaptureCounter */
 747:Generated_Source\PSoC5/Timer_1.c **** 
 748:Generated_Source\PSoC5/Timer_1.c **** 
 749:Generated_Source\PSoC5/Timer_1.c **** /*******************************************************************************
 750:Generated_Source\PSoC5/Timer_1.c **** * Function Name: Timer_1_ClearFIFO
 751:Generated_Source\PSoC5/Timer_1.c **** ********************************************************************************
 752:Generated_Source\PSoC5/Timer_1.c **** *
 753:Generated_Source\PSoC5/Timer_1.c **** * Summary:
 754:Generated_Source\PSoC5/Timer_1.c **** *  This function clears all capture data from the capture FIFO
 755:Generated_Source\PSoC5/Timer_1.c **** *
 756:Generated_Source\PSoC5/Timer_1.c **** * Parameters:
 757:Generated_Source\PSoC5/Timer_1.c **** *  void
 758:Generated_Source\PSoC5/Timer_1.c **** *
 759:Generated_Source\PSoC5/Timer_1.c **** * Return:
 760:Generated_Source\PSoC5/Timer_1.c **** *  void
 761:Generated_Source\PSoC5/Timer_1.c **** *
 762:Generated_Source\PSoC5/Timer_1.c **** *******************************************************************************/
 763:Generated_Source\PSoC5/Timer_1.c **** void Timer_1_ClearFIFO(void) 
 764:Generated_Source\PSoC5/Timer_1.c **** {
 283              		.loc 1 764 0
 284              		.cfi_startproc
 285              		@ args = 0, pretend = 0, frame = 0
 286              		@ frame_needed = 0, uses_anonymous_args = 0
 287              		.loc 1 764 0
 288 0000 08B5     		push	{r3, lr}
 289              		.cfi_def_cfa_offset 8
 290              		.cfi_offset 3, -8
 291              		.cfi_offset 14, -4
 765:Generated_Source\PSoC5/Timer_1.c ****     while(0u != (Timer_1_ReadStatusRegister() & Timer_1_STATUS_FIFONEMP))
 292              		.loc 1 765 0
 293 0002 01E0     		b	.L29
 294              	.L30:
 766:Generated_Source\PSoC5/Timer_1.c ****     {
 767:Generated_Source\PSoC5/Timer_1.c ****         (void)Timer_1_ReadCapture();
 295              		.loc 1 767 0
 296 0004 FFF7FEFF 		bl	Timer_1_ReadCapture
 297              	.LVL4:
 298              	.L29:
 765:Generated_Source\PSoC5/Timer_1.c ****     while(0u != (Timer_1_ReadStatusRegister() & Timer_1_STATUS_FIFONEMP))
 299              		.loc 1 765 0
 300 0008 FFF7FEFF 		bl	Timer_1_ReadStatusRegister
 301              	.LVL5:
 302 000c 10F0080F 		tst	r0, #8
 303 0010 F8D1     		bne	.L30
 768:Generated_Source\PSoC5/Timer_1.c ****     }
 769:Generated_Source\PSoC5/Timer_1.c **** }
 304              		.loc 1 769 0
 305 0012 08BD     		pop	{r3, pc}
 306              		.cfi_endproc
 307              	.LFE13:
 308              		.size	Timer_1_ClearFIFO, .-Timer_1_ClearFIFO
 309              		.section	.text.Timer_1_Init,"ax",%progbits
 310              		.align	2
 311              		.global	Timer_1_Init
 312              		.thumb
 313              		.thumb_func
ARM GAS  C:\Users\User\AppData\Local\Temp\cclNDgic.s 			page 20


 314              		.type	Timer_1_Init, %function
 315              	Timer_1_Init:
 316              	.LFB0:
  44:Generated_Source\PSoC5/Timer_1.c ****     #if(!Timer_1_UsingFixedFunction)
 317              		.loc 1 44 0
 318              		.cfi_startproc
 319              		@ args = 0, pretend = 0, frame = 0
 320              		@ frame_needed = 0, uses_anonymous_args = 0
 321 0000 08B5     		push	{r3, lr}
 322              		.cfi_def_cfa_offset 8
 323              		.cfi_offset 3, -8
 324              		.cfi_offset 14, -4
 118:Generated_Source\PSoC5/Timer_1.c ****     Timer_1_WriteCounter(Timer_1_INIT_PERIOD);
 325              		.loc 1 118 0
 326 0002 FF20     		movs	r0, #255
 327 0004 FFF7FEFF 		bl	Timer_1_WritePeriod
 328              	.LVL6:
 119:Generated_Source\PSoC5/Timer_1.c **** 
 329              		.loc 1 119 0
 330 0008 FF20     		movs	r0, #255
 331 000a FFF7FEFF 		bl	Timer_1_WriteCounter
 332              	.LVL7:
 142:Generated_Source\PSoC5/Timer_1.c **** 
 333              		.loc 1 142 0
 334 000e FFF7FEFF 		bl	CyEnterCriticalSection
 335              	.LVL8:
 145:Generated_Source\PSoC5/Timer_1.c **** 
 336              		.loc 1 145 0
 337 0012 064A     		ldr	r2, .L34
 338 0014 1378     		ldrb	r3, [r2]	@ zero_extendqisi2
 339 0016 43F01003 		orr	r3, r3, #16
 340 001a 1370     		strb	r3, [r2]
 148:Generated_Source\PSoC5/Timer_1.c **** 
 341              		.loc 1 148 0
 342 001c FFF7FEFF 		bl	CyExitCriticalSection
 343              	.LVL9:
 159:Generated_Source\PSoC5/Timer_1.c ****     #endif /* Configure additional features of UDB implementation */
 344              		.loc 1 159 0
 345 0020 FFF7FEFF 		bl	Timer_1_ClearFIFO
 346              	.LVL10:
 162:Generated_Source\PSoC5/Timer_1.c **** }
 347              		.loc 1 162 0
 348 0024 0220     		movs	r0, #2
 349 0026 FFF7FEFF 		bl	Timer_1_SetInterruptMode
 350              	.LVL11:
 351 002a 08BD     		pop	{r3, pc}
 352              	.L35:
 353              		.align	2
 354              	.L34:
 355 002c 96650040 		.word	1073767830
 356              		.cfi_endproc
 357              	.LFE0:
 358              		.size	Timer_1_Init, .-Timer_1_Init
 359              		.section	.text.Timer_1_Start,"ax",%progbits
 360              		.align	2
 361              		.global	Timer_1_Start
 362              		.thumb
ARM GAS  C:\Users\User\AppData\Local\Temp\cclNDgic.s 			page 21


 363              		.thumb_func
 364              		.type	Timer_1_Start, %function
 365              	Timer_1_Start:
 366              	.LFB2:
 216:Generated_Source\PSoC5/Timer_1.c ****     if(Timer_1_initVar == 0u)
 367              		.loc 1 216 0
 368              		.cfi_startproc
 369              		@ args = 0, pretend = 0, frame = 0
 370              		@ frame_needed = 0, uses_anonymous_args = 0
 371 0000 08B5     		push	{r3, lr}
 372              		.cfi_def_cfa_offset 8
 373              		.cfi_offset 3, -8
 374              		.cfi_offset 14, -4
 217:Generated_Source\PSoC5/Timer_1.c ****     {
 375              		.loc 1 217 0
 376 0002 044B     		ldr	r3, .L39
 377 0004 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 378 0006 23B9     		cbnz	r3, .L36
 219:Generated_Source\PSoC5/Timer_1.c **** 
 379              		.loc 1 219 0
 380 0008 FFF7FEFF 		bl	Timer_1_Init
 381              	.LVL12:
 221:Generated_Source\PSoC5/Timer_1.c ****     }
 382              		.loc 1 221 0
 383 000c 0122     		movs	r2, #1
 384 000e 014B     		ldr	r3, .L39
 385 0010 1A70     		strb	r2, [r3]
 386              	.L36:
 387 0012 08BD     		pop	{r3, pc}
 388              	.L40:
 389              		.align	2
 390              	.L39:
 391 0014 00000000 		.word	.LANCHOR0
 392              		.cfi_endproc
 393              	.LFE2:
 394              		.size	Timer_1_Start, .-Timer_1_Start
 395              		.global	Timer_1_initVar
 396              		.bss
 397              		.set	.LANCHOR0,. + 0
 398              		.type	Timer_1_initVar, %object
 399              		.size	Timer_1_initVar, 1
 400              	Timer_1_initVar:
 401 0000 00       		.space	1
 402              		.text
 403              	.Letext0:
 404              		.file 2 "Generated_Source\\PSoC5\\cytypes.h"
 405              		.file 3 "Generated_Source\\PSoC5\\CyLib.h"
 406              		.section	.debug_info,"",%progbits
 407              	.Ldebug_info0:
 408 0000 B0020000 		.4byte	0x2b0
 409 0004 0400     		.2byte	0x4
 410 0006 00000000 		.4byte	.Ldebug_abbrev0
 411 000a 04       		.byte	0x4
 412 000b 01       		.uleb128 0x1
 413 000c D0000000 		.4byte	.LASF36
 414 0010 0C       		.byte	0xc
 415 0011 60000000 		.4byte	.LASF37
ARM GAS  C:\Users\User\AppData\Local\Temp\cclNDgic.s 			page 22


 416 0015 55020000 		.4byte	.LASF38
 417 0019 00000000 		.4byte	.Ldebug_ranges0+0
 418 001d 00000000 		.4byte	0
 419 0021 00000000 		.4byte	.Ldebug_line0
 420 0025 02       		.uleb128 0x2
 421 0026 01       		.byte	0x1
 422 0027 06       		.byte	0x6
 423 0028 2E030000 		.4byte	.LASF0
 424 002c 02       		.uleb128 0x2
 425 002d 01       		.byte	0x1
 426 002e 08       		.byte	0x8
 427 002f C2000000 		.4byte	.LASF1
 428 0033 02       		.uleb128 0x2
 429 0034 02       		.byte	0x2
 430 0035 05       		.byte	0x5
 431 0036 EF020000 		.4byte	.LASF2
 432 003a 02       		.uleb128 0x2
 433 003b 02       		.byte	0x2
 434 003c 07       		.byte	0x7
 435 003d 4D000000 		.4byte	.LASF3
 436 0041 02       		.uleb128 0x2
 437 0042 04       		.byte	0x4
 438 0043 05       		.byte	0x5
 439 0044 14030000 		.4byte	.LASF4
 440 0048 02       		.uleb128 0x2
 441 0049 04       		.byte	0x4
 442 004a 07       		.byte	0x7
 443 004b 63010000 		.4byte	.LASF5
 444 004f 02       		.uleb128 0x2
 445 0050 08       		.byte	0x8
 446 0051 05       		.byte	0x5
 447 0052 AD020000 		.4byte	.LASF6
 448 0056 02       		.uleb128 0x2
 449 0057 08       		.byte	0x8
 450 0058 07       		.byte	0x7
 451 0059 AB000000 		.4byte	.LASF7
 452 005d 03       		.uleb128 0x3
 453 005e 04       		.byte	0x4
 454 005f 05       		.byte	0x5
 455 0060 696E7400 		.ascii	"int\000"
 456 0064 02       		.uleb128 0x2
 457 0065 04       		.byte	0x4
 458 0066 07       		.byte	0x7
 459 0067 81000000 		.4byte	.LASF8
 460 006b 04       		.uleb128 0x4
 461 006c 75010000 		.4byte	.LASF12
 462 0070 02       		.byte	0x2
 463 0071 E401     		.2byte	0x1e4
 464 0073 2C000000 		.4byte	0x2c
 465 0077 02       		.uleb128 0x2
 466 0078 04       		.byte	0x4
 467 0079 04       		.byte	0x4
 468 007a 9D000000 		.4byte	.LASF9
 469 007e 02       		.uleb128 0x2
 470 007f 08       		.byte	0x8
 471 0080 04       		.byte	0x4
 472 0081 9D010000 		.4byte	.LASF10
ARM GAS  C:\Users\User\AppData\Local\Temp\cclNDgic.s 			page 23


 473 0085 02       		.uleb128 0x2
 474 0086 01       		.byte	0x1
 475 0087 08       		.byte	0x8
 476 0088 1D030000 		.4byte	.LASF11
 477 008c 04       		.uleb128 0x4
 478 008d 5E010000 		.4byte	.LASF13
 479 0091 02       		.byte	0x2
 480 0092 8E02     		.2byte	0x28e
 481 0094 98000000 		.4byte	0x98
 482 0098 05       		.uleb128 0x5
 483 0099 6B000000 		.4byte	0x6b
 484 009d 02       		.uleb128 0x2
 485 009e 08       		.byte	0x8
 486 009f 04       		.byte	0x4
 487 00a0 22030000 		.4byte	.LASF14
 488 00a4 02       		.uleb128 0x2
 489 00a5 04       		.byte	0x4
 490 00a6 07       		.byte	0x7
 491 00a7 A4020000 		.4byte	.LASF15
 492 00ab 06       		.uleb128 0x6
 493 00ac 8E010000 		.4byte	.LASF16
 494 00b0 01       		.byte	0x1
 495 00b1 B4       		.byte	0xb4
 496 00b2 00000000 		.4byte	.LFB1
 497 00b6 02000000 		.4byte	.LFE1-.LFB1
 498 00ba 01       		.uleb128 0x1
 499 00bb 9C       		.byte	0x9c
 500 00bc 06       		.uleb128 0x6
 501 00bd 3A030000 		.4byte	.LASF17
 502 00c1 01       		.byte	0x1
 503 00c2 F7       		.byte	0xf7
 504 00c3 00000000 		.4byte	.LFB3
 505 00c7 02000000 		.4byte	.LFE3-.LFB3
 506 00cb 01       		.uleb128 0x1
 507 00cc 9C       		.byte	0x9c
 508 00cd 07       		.uleb128 0x7
 509 00ce A4010000 		.4byte	.LASF21
 510 00d2 01       		.byte	0x1
 511 00d3 1701     		.2byte	0x117
 512 00d5 00000000 		.4byte	.LFB4
 513 00d9 0C000000 		.4byte	.LFE4-.LFB4
 514 00dd 01       		.uleb128 0x1
 515 00de 9C       		.byte	0x9c
 516 00df F2000000 		.4byte	0xf2
 517 00e3 08       		.uleb128 0x8
 518 00e4 BB020000 		.4byte	.LASF23
 519 00e8 01       		.byte	0x1
 520 00e9 1701     		.2byte	0x117
 521 00eb 6B000000 		.4byte	0x6b
 522 00ef 01       		.uleb128 0x1
 523 00f0 50       		.byte	0x50
 524 00f1 00       		.byte	0
 525 00f2 09       		.uleb128 0x9
 526 00f3 00000000 		.4byte	.LASF18
 527 00f7 01       		.byte	0x1
 528 00f8 2E01     		.2byte	0x12e
 529 00fa 00000000 		.4byte	.LFB5
ARM GAS  C:\Users\User\AppData\Local\Temp\cclNDgic.s 			page 24


 530 00fe 0C000000 		.4byte	.LFE5-.LFB5
 531 0102 01       		.uleb128 0x1
 532 0103 9C       		.byte	0x9c
 533 0104 0A       		.uleb128 0xa
 534 0105 F9020000 		.4byte	.LASF19
 535 0109 01       		.byte	0x1
 536 010a 4D01     		.2byte	0x14d
 537 010c 6B000000 		.4byte	0x6b
 538 0110 00000000 		.4byte	.LFB6
 539 0114 0C000000 		.4byte	.LFE6-.LFB6
 540 0118 01       		.uleb128 0x1
 541 0119 9C       		.byte	0x9c
 542 011a 0A       		.uleb128 0xa
 543 011b 7B010000 		.4byte	.LASF20
 544 011f 01       		.byte	0x1
 545 0120 9501     		.2byte	0x195
 546 0122 6B000000 		.4byte	0x6b
 547 0126 00000000 		.4byte	.LFB7
 548 012a 0C000000 		.4byte	.LFE7-.LFB7
 549 012e 01       		.uleb128 0x1
 550 012f 9C       		.byte	0x9c
 551 0130 07       		.uleb128 0x7
 552 0131 32000000 		.4byte	.LASF22
 553 0135 01       		.byte	0x1
 554 0136 AF01     		.2byte	0x1af
 555 0138 00000000 		.4byte	.LFB8
 556 013c 0C000000 		.4byte	.LFE8-.LFB8
 557 0140 01       		.uleb128 0x1
 558 0141 9C       		.byte	0x9c
 559 0142 55010000 		.4byte	0x155
 560 0146 08       		.uleb128 0x8
 561 0147 46000000 		.4byte	.LASF24
 562 014b 01       		.byte	0x1
 563 014c AF01     		.2byte	0x1af
 564 014e 6B000000 		.4byte	0x6b
 565 0152 01       		.uleb128 0x1
 566 0153 50       		.byte	0x50
 567 0154 00       		.byte	0
 568 0155 0A       		.uleb128 0xa
 569 0156 2A020000 		.4byte	.LASF25
 570 015a 01       		.byte	0x1
 571 015b C801     		.2byte	0x1c8
 572 015d 6B000000 		.4byte	0x6b
 573 0161 00000000 		.4byte	.LFB9
 574 0165 0C000000 		.4byte	.LFE9-.LFB9
 575 0169 01       		.uleb128 0x1
 576 016a 9C       		.byte	0x9c
 577 016b 07       		.uleb128 0x7
 578 016c 15020000 		.4byte	.LASF26
 579 0170 01       		.byte	0x1
 580 0171 E001     		.2byte	0x1e0
 581 0173 00000000 		.4byte	.LFB10
 582 0177 0C000000 		.4byte	.LFE10-.LFB10
 583 017b 01       		.uleb128 0x1
 584 017c 9C       		.byte	0x9c
 585 017d 90010000 		.4byte	0x190
 586 0181 08       		.uleb128 0x8
ARM GAS  C:\Users\User\AppData\Local\Temp\cclNDgic.s 			page 25


 587 0182 A3000000 		.4byte	.LASF27
 588 0186 01       		.byte	0x1
 589 0187 E001     		.2byte	0x1e0
 590 0189 6B000000 		.4byte	0x6b
 591 018d 01       		.uleb128 0x1
 592 018e 50       		.byte	0x50
 593 018f 00       		.byte	0
 594 0190 0A       		.uleb128 0xa
 595 0191 C9020000 		.4byte	.LASF28
 596 0195 01       		.byte	0x1
 597 0196 FC01     		.2byte	0x1fc
 598 0198 6B000000 		.4byte	0x6b
 599 019c 00000000 		.4byte	.LFB11
 600 01a0 14000000 		.4byte	.LFE11-.LFB11
 601 01a4 01       		.uleb128 0x1
 602 01a5 9C       		.byte	0x9c
 603 01a6 07       		.uleb128 0x7
 604 01a7 18000000 		.4byte	.LASF29
 605 01ab 01       		.byte	0x1
 606 01ac B002     		.2byte	0x2b0
 607 01ae 00000000 		.4byte	.LFB12
 608 01b2 02000000 		.4byte	.LFE12-.LFB12
 609 01b6 01       		.uleb128 0x1
 610 01b7 9C       		.byte	0x9c
 611 01b8 CD010000 		.4byte	0x1cd
 612 01bc 0B       		.uleb128 0xb
 613 01bd 8E000000 		.4byte	.LASF30
 614 01c1 01       		.byte	0x1
 615 01c2 B002     		.2byte	0x2b0
 616 01c4 6B000000 		.4byte	0x6b
 617 01c8 00000000 		.4byte	.LLST0
 618 01cc 00       		.byte	0
 619 01cd 07       		.uleb128 0x7
 620 01ce DD020000 		.4byte	.LASF31
 621 01d2 01       		.byte	0x1
 622 01d3 FB02     		.2byte	0x2fb
 623 01d5 00000000 		.4byte	.LFB13
 624 01d9 14000000 		.4byte	.LFE13-.LFB13
 625 01dd 01       		.uleb128 0x1
 626 01de 9C       		.byte	0x9c
 627 01df F6010000 		.4byte	0x1f6
 628 01e3 0C       		.uleb128 0xc
 629 01e4 08000000 		.4byte	.LVL4
 630 01e8 55010000 		.4byte	0x155
 631 01ec 0C       		.uleb128 0xc
 632 01ed 0C000000 		.4byte	.LVL5
 633 01f1 04010000 		.4byte	0x104
 634 01f5 00       		.byte	0
 635 01f6 0D       		.uleb128 0xd
 636 01f7 F2010000 		.4byte	.LASF32
 637 01fb 01       		.byte	0x1
 638 01fc 2B       		.byte	0x2b
 639 01fd 00000000 		.4byte	.LFB0
 640 0201 30000000 		.4byte	.LFE0-.LFB0
 641 0205 01       		.uleb128 0x1
 642 0206 9C       		.byte	0x9c
 643 0207 6D020000 		.4byte	0x26d
ARM GAS  C:\Users\User\AppData\Local\Temp\cclNDgic.s 			page 26


 644 020b 0E       		.uleb128 0xe
 645 020c 3E020000 		.4byte	.LASF39
 646 0210 01       		.byte	0x1
 647 0211 2F       		.byte	0x2f
 648 0212 6B000000 		.4byte	0x6b
 649 0216 23000000 		.4byte	.LLST1
 650 021a 0F       		.uleb128 0xf
 651 021b 08000000 		.4byte	.LVL6
 652 021f 30010000 		.4byte	0x130
 653 0223 2E020000 		.4byte	0x22e
 654 0227 10       		.uleb128 0x10
 655 0228 01       		.uleb128 0x1
 656 0229 50       		.byte	0x50
 657 022a 02       		.uleb128 0x2
 658 022b 09       		.byte	0x9
 659 022c FF       		.byte	0xff
 660 022d 00       		.byte	0
 661 022e 0F       		.uleb128 0xf
 662 022f 0E000000 		.4byte	.LVL7
 663 0233 6B010000 		.4byte	0x16b
 664 0237 42020000 		.4byte	0x242
 665 023b 10       		.uleb128 0x10
 666 023c 01       		.uleb128 0x1
 667 023d 50       		.byte	0x50
 668 023e 02       		.uleb128 0x2
 669 023f 09       		.byte	0x9
 670 0240 FF       		.byte	0xff
 671 0241 00       		.byte	0
 672 0242 0C       		.uleb128 0xc
 673 0243 12000000 		.4byte	.LVL8
 674 0247 9D020000 		.4byte	0x29d
 675 024b 0C       		.uleb128 0xc
 676 024c 20000000 		.4byte	.LVL9
 677 0250 A8020000 		.4byte	0x2a8
 678 0254 0C       		.uleb128 0xc
 679 0255 24000000 		.4byte	.LVL10
 680 0259 CD010000 		.4byte	0x1cd
 681 025d 11       		.uleb128 0x11
 682 025e 2A000000 		.4byte	.LVL11
 683 0262 CD000000 		.4byte	0xcd
 684 0266 10       		.uleb128 0x10
 685 0267 01       		.uleb128 0x1
 686 0268 50       		.byte	0x50
 687 0269 01       		.uleb128 0x1
 688 026a 32       		.byte	0x32
 689 026b 00       		.byte	0
 690 026c 00       		.byte	0
 691 026d 0D       		.uleb128 0xd
 692 026e E4010000 		.4byte	.LASF33
 693 0272 01       		.byte	0x1
 694 0273 D7       		.byte	0xd7
 695 0274 00000000 		.4byte	.LFB2
 696 0278 18000000 		.4byte	.LFE2-.LFB2
 697 027c 01       		.uleb128 0x1
 698 027d 9C       		.byte	0x9c
 699 027e 8C020000 		.4byte	0x28c
 700 0282 0C       		.uleb128 0xc
ARM GAS  C:\Users\User\AppData\Local\Temp\cclNDgic.s 			page 27


 701 0283 0C000000 		.4byte	.LVL12
 702 0287 F6010000 		.4byte	0x1f6
 703 028b 00       		.byte	0
 704 028c 12       		.uleb128 0x12
 705 028d BD010000 		.4byte	.LASF40
 706 0291 01       		.byte	0x1
 707 0292 1A       		.byte	0x1a
 708 0293 6B000000 		.4byte	0x6b
 709 0297 05       		.uleb128 0x5
 710 0298 03       		.byte	0x3
 711 0299 00000000 		.4byte	Timer_1_initVar
 712 029d 13       		.uleb128 0x13
 713 029e CD010000 		.4byte	.LASF34
 714 02a2 CD010000 		.4byte	.LASF34
 715 02a6 03       		.byte	0x3
 716 02a7 7D       		.byte	0x7d
 717 02a8 13       		.uleb128 0x13
 718 02a9 FF010000 		.4byte	.LASF35
 719 02ad FF010000 		.4byte	.LASF35
 720 02b1 03       		.byte	0x3
 721 02b2 7E       		.byte	0x7e
 722 02b3 00       		.byte	0
 723              		.section	.debug_abbrev,"",%progbits
 724              	.Ldebug_abbrev0:
 725 0000 01       		.uleb128 0x1
 726 0001 11       		.uleb128 0x11
 727 0002 01       		.byte	0x1
 728 0003 25       		.uleb128 0x25
 729 0004 0E       		.uleb128 0xe
 730 0005 13       		.uleb128 0x13
 731 0006 0B       		.uleb128 0xb
 732 0007 03       		.uleb128 0x3
 733 0008 0E       		.uleb128 0xe
 734 0009 1B       		.uleb128 0x1b
 735 000a 0E       		.uleb128 0xe
 736 000b 55       		.uleb128 0x55
 737 000c 17       		.uleb128 0x17
 738 000d 11       		.uleb128 0x11
 739 000e 01       		.uleb128 0x1
 740 000f 10       		.uleb128 0x10
 741 0010 17       		.uleb128 0x17
 742 0011 00       		.byte	0
 743 0012 00       		.byte	0
 744 0013 02       		.uleb128 0x2
 745 0014 24       		.uleb128 0x24
 746 0015 00       		.byte	0
 747 0016 0B       		.uleb128 0xb
 748 0017 0B       		.uleb128 0xb
 749 0018 3E       		.uleb128 0x3e
 750 0019 0B       		.uleb128 0xb
 751 001a 03       		.uleb128 0x3
 752 001b 0E       		.uleb128 0xe
 753 001c 00       		.byte	0
 754 001d 00       		.byte	0
 755 001e 03       		.uleb128 0x3
 756 001f 24       		.uleb128 0x24
 757 0020 00       		.byte	0
ARM GAS  C:\Users\User\AppData\Local\Temp\cclNDgic.s 			page 28


 758 0021 0B       		.uleb128 0xb
 759 0022 0B       		.uleb128 0xb
 760 0023 3E       		.uleb128 0x3e
 761 0024 0B       		.uleb128 0xb
 762 0025 03       		.uleb128 0x3
 763 0026 08       		.uleb128 0x8
 764 0027 00       		.byte	0
 765 0028 00       		.byte	0
 766 0029 04       		.uleb128 0x4
 767 002a 16       		.uleb128 0x16
 768 002b 00       		.byte	0
 769 002c 03       		.uleb128 0x3
 770 002d 0E       		.uleb128 0xe
 771 002e 3A       		.uleb128 0x3a
 772 002f 0B       		.uleb128 0xb
 773 0030 3B       		.uleb128 0x3b
 774 0031 05       		.uleb128 0x5
 775 0032 49       		.uleb128 0x49
 776 0033 13       		.uleb128 0x13
 777 0034 00       		.byte	0
 778 0035 00       		.byte	0
 779 0036 05       		.uleb128 0x5
 780 0037 35       		.uleb128 0x35
 781 0038 00       		.byte	0
 782 0039 49       		.uleb128 0x49
 783 003a 13       		.uleb128 0x13
 784 003b 00       		.byte	0
 785 003c 00       		.byte	0
 786 003d 06       		.uleb128 0x6
 787 003e 2E       		.uleb128 0x2e
 788 003f 00       		.byte	0
 789 0040 3F       		.uleb128 0x3f
 790 0041 19       		.uleb128 0x19
 791 0042 03       		.uleb128 0x3
 792 0043 0E       		.uleb128 0xe
 793 0044 3A       		.uleb128 0x3a
 794 0045 0B       		.uleb128 0xb
 795 0046 3B       		.uleb128 0x3b
 796 0047 0B       		.uleb128 0xb
 797 0048 27       		.uleb128 0x27
 798 0049 19       		.uleb128 0x19
 799 004a 11       		.uleb128 0x11
 800 004b 01       		.uleb128 0x1
 801 004c 12       		.uleb128 0x12
 802 004d 06       		.uleb128 0x6
 803 004e 40       		.uleb128 0x40
 804 004f 18       		.uleb128 0x18
 805 0050 9742     		.uleb128 0x2117
 806 0052 19       		.uleb128 0x19
 807 0053 00       		.byte	0
 808 0054 00       		.byte	0
 809 0055 07       		.uleb128 0x7
 810 0056 2E       		.uleb128 0x2e
 811 0057 01       		.byte	0x1
 812 0058 3F       		.uleb128 0x3f
 813 0059 19       		.uleb128 0x19
 814 005a 03       		.uleb128 0x3
ARM GAS  C:\Users\User\AppData\Local\Temp\cclNDgic.s 			page 29


 815 005b 0E       		.uleb128 0xe
 816 005c 3A       		.uleb128 0x3a
 817 005d 0B       		.uleb128 0xb
 818 005e 3B       		.uleb128 0x3b
 819 005f 05       		.uleb128 0x5
 820 0060 27       		.uleb128 0x27
 821 0061 19       		.uleb128 0x19
 822 0062 11       		.uleb128 0x11
 823 0063 01       		.uleb128 0x1
 824 0064 12       		.uleb128 0x12
 825 0065 06       		.uleb128 0x6
 826 0066 40       		.uleb128 0x40
 827 0067 18       		.uleb128 0x18
 828 0068 9742     		.uleb128 0x2117
 829 006a 19       		.uleb128 0x19
 830 006b 01       		.uleb128 0x1
 831 006c 13       		.uleb128 0x13
 832 006d 00       		.byte	0
 833 006e 00       		.byte	0
 834 006f 08       		.uleb128 0x8
 835 0070 05       		.uleb128 0x5
 836 0071 00       		.byte	0
 837 0072 03       		.uleb128 0x3
 838 0073 0E       		.uleb128 0xe
 839 0074 3A       		.uleb128 0x3a
 840 0075 0B       		.uleb128 0xb
 841 0076 3B       		.uleb128 0x3b
 842 0077 05       		.uleb128 0x5
 843 0078 49       		.uleb128 0x49
 844 0079 13       		.uleb128 0x13
 845 007a 02       		.uleb128 0x2
 846 007b 18       		.uleb128 0x18
 847 007c 00       		.byte	0
 848 007d 00       		.byte	0
 849 007e 09       		.uleb128 0x9
 850 007f 2E       		.uleb128 0x2e
 851 0080 00       		.byte	0
 852 0081 3F       		.uleb128 0x3f
 853 0082 19       		.uleb128 0x19
 854 0083 03       		.uleb128 0x3
 855 0084 0E       		.uleb128 0xe
 856 0085 3A       		.uleb128 0x3a
 857 0086 0B       		.uleb128 0xb
 858 0087 3B       		.uleb128 0x3b
 859 0088 05       		.uleb128 0x5
 860 0089 27       		.uleb128 0x27
 861 008a 19       		.uleb128 0x19
 862 008b 11       		.uleb128 0x11
 863 008c 01       		.uleb128 0x1
 864 008d 12       		.uleb128 0x12
 865 008e 06       		.uleb128 0x6
 866 008f 40       		.uleb128 0x40
 867 0090 18       		.uleb128 0x18
 868 0091 9742     		.uleb128 0x2117
 869 0093 19       		.uleb128 0x19
 870 0094 00       		.byte	0
 871 0095 00       		.byte	0
ARM GAS  C:\Users\User\AppData\Local\Temp\cclNDgic.s 			page 30


 872 0096 0A       		.uleb128 0xa
 873 0097 2E       		.uleb128 0x2e
 874 0098 00       		.byte	0
 875 0099 3F       		.uleb128 0x3f
 876 009a 19       		.uleb128 0x19
 877 009b 03       		.uleb128 0x3
 878 009c 0E       		.uleb128 0xe
 879 009d 3A       		.uleb128 0x3a
 880 009e 0B       		.uleb128 0xb
 881 009f 3B       		.uleb128 0x3b
 882 00a0 05       		.uleb128 0x5
 883 00a1 27       		.uleb128 0x27
 884 00a2 19       		.uleb128 0x19
 885 00a3 49       		.uleb128 0x49
 886 00a4 13       		.uleb128 0x13
 887 00a5 11       		.uleb128 0x11
 888 00a6 01       		.uleb128 0x1
 889 00a7 12       		.uleb128 0x12
 890 00a8 06       		.uleb128 0x6
 891 00a9 40       		.uleb128 0x40
 892 00aa 18       		.uleb128 0x18
 893 00ab 9742     		.uleb128 0x2117
 894 00ad 19       		.uleb128 0x19
 895 00ae 00       		.byte	0
 896 00af 00       		.byte	0
 897 00b0 0B       		.uleb128 0xb
 898 00b1 05       		.uleb128 0x5
 899 00b2 00       		.byte	0
 900 00b3 03       		.uleb128 0x3
 901 00b4 0E       		.uleb128 0xe
 902 00b5 3A       		.uleb128 0x3a
 903 00b6 0B       		.uleb128 0xb
 904 00b7 3B       		.uleb128 0x3b
 905 00b8 05       		.uleb128 0x5
 906 00b9 49       		.uleb128 0x49
 907 00ba 13       		.uleb128 0x13
 908 00bb 02       		.uleb128 0x2
 909 00bc 17       		.uleb128 0x17
 910 00bd 00       		.byte	0
 911 00be 00       		.byte	0
 912 00bf 0C       		.uleb128 0xc
 913 00c0 898201   		.uleb128 0x4109
 914 00c3 00       		.byte	0
 915 00c4 11       		.uleb128 0x11
 916 00c5 01       		.uleb128 0x1
 917 00c6 31       		.uleb128 0x31
 918 00c7 13       		.uleb128 0x13
 919 00c8 00       		.byte	0
 920 00c9 00       		.byte	0
 921 00ca 0D       		.uleb128 0xd
 922 00cb 2E       		.uleb128 0x2e
 923 00cc 01       		.byte	0x1
 924 00cd 3F       		.uleb128 0x3f
 925 00ce 19       		.uleb128 0x19
 926 00cf 03       		.uleb128 0x3
 927 00d0 0E       		.uleb128 0xe
 928 00d1 3A       		.uleb128 0x3a
ARM GAS  C:\Users\User\AppData\Local\Temp\cclNDgic.s 			page 31


 929 00d2 0B       		.uleb128 0xb
 930 00d3 3B       		.uleb128 0x3b
 931 00d4 0B       		.uleb128 0xb
 932 00d5 27       		.uleb128 0x27
 933 00d6 19       		.uleb128 0x19
 934 00d7 11       		.uleb128 0x11
 935 00d8 01       		.uleb128 0x1
 936 00d9 12       		.uleb128 0x12
 937 00da 06       		.uleb128 0x6
 938 00db 40       		.uleb128 0x40
 939 00dc 18       		.uleb128 0x18
 940 00dd 9742     		.uleb128 0x2117
 941 00df 19       		.uleb128 0x19
 942 00e0 01       		.uleb128 0x1
 943 00e1 13       		.uleb128 0x13
 944 00e2 00       		.byte	0
 945 00e3 00       		.byte	0
 946 00e4 0E       		.uleb128 0xe
 947 00e5 34       		.uleb128 0x34
 948 00e6 00       		.byte	0
 949 00e7 03       		.uleb128 0x3
 950 00e8 0E       		.uleb128 0xe
 951 00e9 3A       		.uleb128 0x3a
 952 00ea 0B       		.uleb128 0xb
 953 00eb 3B       		.uleb128 0x3b
 954 00ec 0B       		.uleb128 0xb
 955 00ed 49       		.uleb128 0x49
 956 00ee 13       		.uleb128 0x13
 957 00ef 02       		.uleb128 0x2
 958 00f0 17       		.uleb128 0x17
 959 00f1 00       		.byte	0
 960 00f2 00       		.byte	0
 961 00f3 0F       		.uleb128 0xf
 962 00f4 898201   		.uleb128 0x4109
 963 00f7 01       		.byte	0x1
 964 00f8 11       		.uleb128 0x11
 965 00f9 01       		.uleb128 0x1
 966 00fa 31       		.uleb128 0x31
 967 00fb 13       		.uleb128 0x13
 968 00fc 01       		.uleb128 0x1
 969 00fd 13       		.uleb128 0x13
 970 00fe 00       		.byte	0
 971 00ff 00       		.byte	0
 972 0100 10       		.uleb128 0x10
 973 0101 8A8201   		.uleb128 0x410a
 974 0104 00       		.byte	0
 975 0105 02       		.uleb128 0x2
 976 0106 18       		.uleb128 0x18
 977 0107 9142     		.uleb128 0x2111
 978 0109 18       		.uleb128 0x18
 979 010a 00       		.byte	0
 980 010b 00       		.byte	0
 981 010c 11       		.uleb128 0x11
 982 010d 898201   		.uleb128 0x4109
 983 0110 01       		.byte	0x1
 984 0111 11       		.uleb128 0x11
 985 0112 01       		.uleb128 0x1
ARM GAS  C:\Users\User\AppData\Local\Temp\cclNDgic.s 			page 32


 986 0113 31       		.uleb128 0x31
 987 0114 13       		.uleb128 0x13
 988 0115 00       		.byte	0
 989 0116 00       		.byte	0
 990 0117 12       		.uleb128 0x12
 991 0118 34       		.uleb128 0x34
 992 0119 00       		.byte	0
 993 011a 03       		.uleb128 0x3
 994 011b 0E       		.uleb128 0xe
 995 011c 3A       		.uleb128 0x3a
 996 011d 0B       		.uleb128 0xb
 997 011e 3B       		.uleb128 0x3b
 998 011f 0B       		.uleb128 0xb
 999 0120 49       		.uleb128 0x49
 1000 0121 13       		.uleb128 0x13
 1001 0122 3F       		.uleb128 0x3f
 1002 0123 19       		.uleb128 0x19
 1003 0124 02       		.uleb128 0x2
 1004 0125 18       		.uleb128 0x18
 1005 0126 00       		.byte	0
 1006 0127 00       		.byte	0
 1007 0128 13       		.uleb128 0x13
 1008 0129 2E       		.uleb128 0x2e
 1009 012a 00       		.byte	0
 1010 012b 3F       		.uleb128 0x3f
 1011 012c 19       		.uleb128 0x19
 1012 012d 3C       		.uleb128 0x3c
 1013 012e 19       		.uleb128 0x19
 1014 012f 6E       		.uleb128 0x6e
 1015 0130 0E       		.uleb128 0xe
 1016 0131 03       		.uleb128 0x3
 1017 0132 0E       		.uleb128 0xe
 1018 0133 3A       		.uleb128 0x3a
 1019 0134 0B       		.uleb128 0xb
 1020 0135 3B       		.uleb128 0x3b
 1021 0136 0B       		.uleb128 0xb
 1022 0137 00       		.byte	0
 1023 0138 00       		.byte	0
 1024 0139 00       		.byte	0
 1025              		.section	.debug_loc,"",%progbits
 1026              	.Ldebug_loc0:
 1027              	.LLST0:
 1028 0000 00000000 		.4byte	.LVL3
 1029 0004 00000000 		.4byte	.LVL3
 1030 0008 0100     		.2byte	0x1
 1031 000a 50       		.byte	0x50
 1032 000b 00000000 		.4byte	.LVL3
 1033 000f 02000000 		.4byte	.LFE12
 1034 0013 0600     		.2byte	0x6
 1035 0015 F3       		.byte	0xf3
 1036 0016 01       		.uleb128 0x1
 1037 0017 50       		.byte	0x50
 1038 0018 33       		.byte	0x33
 1039 0019 1A       		.byte	0x1a
 1040 001a 9F       		.byte	0x9f
 1041 001b 00000000 		.4byte	0
 1042 001f 00000000 		.4byte	0
ARM GAS  C:\Users\User\AppData\Local\Temp\cclNDgic.s 			page 33


 1043              	.LLST1:
 1044 0023 12000000 		.4byte	.LVL8
 1045 0027 1F000000 		.4byte	.LVL9-1
 1046 002b 0100     		.2byte	0x1
 1047 002d 50       		.byte	0x50
 1048 002e 00000000 		.4byte	0
 1049 0032 00000000 		.4byte	0
 1050              		.section	.debug_aranges,"",%progbits
 1051 0000 84000000 		.4byte	0x84
 1052 0004 0200     		.2byte	0x2
 1053 0006 00000000 		.4byte	.Ldebug_info0
 1054 000a 04       		.byte	0x4
 1055 000b 00       		.byte	0
 1056 000c 0000     		.2byte	0
 1057 000e 0000     		.2byte	0
 1058 0010 00000000 		.4byte	.LFB1
 1059 0014 02000000 		.4byte	.LFE1-.LFB1
 1060 0018 00000000 		.4byte	.LFB3
 1061 001c 02000000 		.4byte	.LFE3-.LFB3
 1062 0020 00000000 		.4byte	.LFB4
 1063 0024 0C000000 		.4byte	.LFE4-.LFB4
 1064 0028 00000000 		.4byte	.LFB5
 1065 002c 0C000000 		.4byte	.LFE5-.LFB5
 1066 0030 00000000 		.4byte	.LFB6
 1067 0034 0C000000 		.4byte	.LFE6-.LFB6
 1068 0038 00000000 		.4byte	.LFB7
 1069 003c 0C000000 		.4byte	.LFE7-.LFB7
 1070 0040 00000000 		.4byte	.LFB8
 1071 0044 0C000000 		.4byte	.LFE8-.LFB8
 1072 0048 00000000 		.4byte	.LFB9
 1073 004c 0C000000 		.4byte	.LFE9-.LFB9
 1074 0050 00000000 		.4byte	.LFB10
 1075 0054 0C000000 		.4byte	.LFE10-.LFB10
 1076 0058 00000000 		.4byte	.LFB11
 1077 005c 14000000 		.4byte	.LFE11-.LFB11
 1078 0060 00000000 		.4byte	.LFB12
 1079 0064 02000000 		.4byte	.LFE12-.LFB12
 1080 0068 00000000 		.4byte	.LFB13
 1081 006c 14000000 		.4byte	.LFE13-.LFB13
 1082 0070 00000000 		.4byte	.LFB0
 1083 0074 30000000 		.4byte	.LFE0-.LFB0
 1084 0078 00000000 		.4byte	.LFB2
 1085 007c 18000000 		.4byte	.LFE2-.LFB2
 1086 0080 00000000 		.4byte	0
 1087 0084 00000000 		.4byte	0
 1088              		.section	.debug_ranges,"",%progbits
 1089              	.Ldebug_ranges0:
 1090 0000 00000000 		.4byte	.LFB1
 1091 0004 02000000 		.4byte	.LFE1
 1092 0008 00000000 		.4byte	.LFB3
 1093 000c 02000000 		.4byte	.LFE3
 1094 0010 00000000 		.4byte	.LFB4
 1095 0014 0C000000 		.4byte	.LFE4
 1096 0018 00000000 		.4byte	.LFB5
 1097 001c 0C000000 		.4byte	.LFE5
 1098 0020 00000000 		.4byte	.LFB6
 1099 0024 0C000000 		.4byte	.LFE6
ARM GAS  C:\Users\User\AppData\Local\Temp\cclNDgic.s 			page 34


 1100 0028 00000000 		.4byte	.LFB7
 1101 002c 0C000000 		.4byte	.LFE7
 1102 0030 00000000 		.4byte	.LFB8
 1103 0034 0C000000 		.4byte	.LFE8
 1104 0038 00000000 		.4byte	.LFB9
 1105 003c 0C000000 		.4byte	.LFE9
 1106 0040 00000000 		.4byte	.LFB10
 1107 0044 0C000000 		.4byte	.LFE10
 1108 0048 00000000 		.4byte	.LFB11
 1109 004c 14000000 		.4byte	.LFE11
 1110 0050 00000000 		.4byte	.LFB12
 1111 0054 02000000 		.4byte	.LFE12
 1112 0058 00000000 		.4byte	.LFB13
 1113 005c 14000000 		.4byte	.LFE13
 1114 0060 00000000 		.4byte	.LFB0
 1115 0064 30000000 		.4byte	.LFE0
 1116 0068 00000000 		.4byte	.LFB2
 1117 006c 18000000 		.4byte	.LFE2
 1118 0070 00000000 		.4byte	0
 1119 0074 00000000 		.4byte	0
 1120              		.section	.debug_line,"",%progbits
 1121              	.Ldebug_line0:
 1122 0000 57010000 		.section	.debug_str,"MS",%progbits,1
 1122      02004F00 
 1122      00000201 
 1122      FB0E0D00 
 1122      01010101 
 1123              	.LASF18:
 1124 0000 54696D65 		.ascii	"Timer_1_SoftwareCapture\000"
 1124      725F315F 
 1124      536F6674 
 1124      77617265 
 1124      43617074 
 1125              	.LASF29:
 1126 0018 54696D65 		.ascii	"Timer_1_SetInterruptCount\000"
 1126      725F315F 
 1126      53657449 
 1126      6E746572 
 1126      72757074 
 1127              	.LASF22:
 1128 0032 54696D65 		.ascii	"Timer_1_WritePeriod\000"
 1128      725F315F 
 1128      57726974 
 1128      65506572 
 1128      696F6400 
 1129              	.LASF24:
 1130 0046 70657269 		.ascii	"period\000"
 1130      6F6400
 1131              	.LASF3:
 1132 004d 73686F72 		.ascii	"short unsigned int\000"
 1132      7420756E 
 1132      7369676E 
 1132      65642069 
 1132      6E7400
 1133              	.LASF37:
 1134 0060 47656E65 		.ascii	"Generated_Source\\PSoC5\\Timer_1.c\000"
 1134      72617465 
ARM GAS  C:\Users\User\AppData\Local\Temp\cclNDgic.s 			page 35


 1134      645F536F 
 1134      75726365 
 1134      5C50536F 
 1135              	.LASF8:
 1136 0081 756E7369 		.ascii	"unsigned int\000"
 1136      676E6564 
 1136      20696E74 
 1136      00
 1137              	.LASF30:
 1138 008e 696E7465 		.ascii	"interruptCount\000"
 1138      72727570 
 1138      74436F75 
 1138      6E7400
 1139              	.LASF9:
 1140 009d 666C6F61 		.ascii	"float\000"
 1140      7400
 1141              	.LASF27:
 1142 00a3 636F756E 		.ascii	"counter\000"
 1142      74657200 
 1143              	.LASF7:
 1144 00ab 6C6F6E67 		.ascii	"long long unsigned int\000"
 1144      206C6F6E 
 1144      6720756E 
 1144      7369676E 
 1144      65642069 
 1145              	.LASF1:
 1146 00c2 756E7369 		.ascii	"unsigned char\000"
 1146      676E6564 
 1146      20636861 
 1146      7200
 1147              	.LASF36:
 1148 00d0 474E5520 		.ascii	"GNU C11 5.4.1 20160609 (release) [ARM/embedded-5-br"
 1148      43313120 
 1148      352E342E 
 1148      31203230 
 1148      31363036 
 1149 0103 616E6368 		.ascii	"anch revision 237715] -mcpu=cortex-m3 -mthumb -g -O"
 1149      20726576 
 1149      6973696F 
 1149      6E203233 
 1149      37373135 
 1150 0136 67202D66 		.ascii	"g -ffunction-sections -ffat-lto-objects\000"
 1150      66756E63 
 1150      74696F6E 
 1150      2D736563 
 1150      74696F6E 
 1151              	.LASF13:
 1152 015e 72656738 		.ascii	"reg8\000"
 1152      00
 1153              	.LASF5:
 1154 0163 6C6F6E67 		.ascii	"long unsigned int\000"
 1154      20756E73 
 1154      69676E65 
 1154      6420696E 
 1154      7400
 1155              	.LASF12:
 1156 0175 75696E74 		.ascii	"uint8\000"
ARM GAS  C:\Users\User\AppData\Local\Temp\cclNDgic.s 			page 36


 1156      3800
 1157              	.LASF20:
 1158 017b 54696D65 		.ascii	"Timer_1_ReadPeriod\000"
 1158      725F315F 
 1158      52656164 
 1158      50657269 
 1158      6F6400
 1159              	.LASF16:
 1160 018e 54696D65 		.ascii	"Timer_1_Enable\000"
 1160      725F315F 
 1160      456E6162 
 1160      6C6500
 1161              	.LASF10:
 1162 019d 646F7562 		.ascii	"double\000"
 1162      6C6500
 1163              	.LASF21:
 1164 01a4 54696D65 		.ascii	"Timer_1_SetInterruptMode\000"
 1164      725F315F 
 1164      53657449 
 1164      6E746572 
 1164      72757074 
 1165              	.LASF40:
 1166 01bd 54696D65 		.ascii	"Timer_1_initVar\000"
 1166      725F315F 
 1166      696E6974 
 1166      56617200 
 1167              	.LASF34:
 1168 01cd 4379456E 		.ascii	"CyEnterCriticalSection\000"
 1168      74657243 
 1168      72697469 
 1168      63616C53 
 1168      65637469 
 1169              	.LASF33:
 1170 01e4 54696D65 		.ascii	"Timer_1_Start\000"
 1170      725F315F 
 1170      53746172 
 1170      7400
 1171              	.LASF32:
 1172 01f2 54696D65 		.ascii	"Timer_1_Init\000"
 1172      725F315F 
 1172      496E6974 
 1172      00
 1173              	.LASF35:
 1174 01ff 43794578 		.ascii	"CyExitCriticalSection\000"
 1174      69744372 
 1174      69746963 
 1174      616C5365 
 1174      6374696F 
 1175              	.LASF26:
 1176 0215 54696D65 		.ascii	"Timer_1_WriteCounter\000"
 1176      725F315F 
 1176      57726974 
 1176      65436F75 
 1176      6E746572 
 1177              	.LASF25:
 1178 022a 54696D65 		.ascii	"Timer_1_ReadCapture\000"
 1178      725F315F 
ARM GAS  C:\Users\User\AppData\Local\Temp\cclNDgic.s 			page 37


 1178      52656164 
 1178      43617074 
 1178      75726500 
 1179              	.LASF39:
 1180 023e 54696D65 		.ascii	"Timer_1_interruptState\000"
 1180      725F315F 
 1180      696E7465 
 1180      72727570 
 1180      74537461 
 1181              	.LASF38:
 1182 0255 433A5C55 		.ascii	"C:\\Users\\User\\Documents\\GitHub\\FINAL-PROJECT-G"
 1182      73657273 
 1182      5C557365 
 1182      725C446F 
 1182      63756D65 
 1183 0283 524F5550 		.ascii	"ROUP5\\Final_Project_Group5.cydsn\000"
 1183      355C4669 
 1183      6E616C5F 
 1183      50726F6A 
 1183      6563745F 
 1184              	.LASF15:
 1185 02a4 73697A65 		.ascii	"sizetype\000"
 1185      74797065 
 1185      00
 1186              	.LASF6:
 1187 02ad 6C6F6E67 		.ascii	"long long int\000"
 1187      206C6F6E 
 1187      6720696E 
 1187      7400
 1188              	.LASF23:
 1189 02bb 696E7465 		.ascii	"interruptMode\000"
 1189      72727570 
 1189      744D6F64 
 1189      6500
 1190              	.LASF28:
 1191 02c9 54696D65 		.ascii	"Timer_1_ReadCounter\000"
 1191      725F315F 
 1191      52656164 
 1191      436F756E 
 1191      74657200 
 1192              	.LASF31:
 1193 02dd 54696D65 		.ascii	"Timer_1_ClearFIFO\000"
 1193      725F315F 
 1193      436C6561 
 1193      72464946 
 1193      4F00
 1194              	.LASF2:
 1195 02ef 73686F72 		.ascii	"short int\000"
 1195      7420696E 
 1195      7400
 1196              	.LASF19:
 1197 02f9 54696D65 		.ascii	"Timer_1_ReadStatusRegister\000"
 1197      725F315F 
 1197      52656164 
 1197      53746174 
 1197      75735265 
 1198              	.LASF4:
ARM GAS  C:\Users\User\AppData\Local\Temp\cclNDgic.s 			page 38


 1199 0314 6C6F6E67 		.ascii	"long int\000"
 1199      20696E74 
 1199      00
 1200              	.LASF11:
 1201 031d 63686172 		.ascii	"char\000"
 1201      00
 1202              	.LASF14:
 1203 0322 6C6F6E67 		.ascii	"long double\000"
 1203      20646F75 
 1203      626C6500 
 1204              	.LASF0:
 1205 032e 7369676E 		.ascii	"signed char\000"
 1205      65642063 
 1205      68617200 
 1206              	.LASF17:
 1207 033a 54696D65 		.ascii	"Timer_1_Stop\000"
 1207      725F315F 
 1207      53746F70 
 1207      00
 1208              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 5.4.1 20160609 (release) [ARM/embedded-5-bran
